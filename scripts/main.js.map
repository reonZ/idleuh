{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/socket.ts","webpack:///./src/macros/shared/esoteric.ts","webpack:///./src/macros/esoteric.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/item.ts","webpack:///./src/macros/exploit-vulnerability.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/dc.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/spell.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/utils.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/skills.ts","webpack:///./src/apps/identify.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/item.ts","webpack:///./src/macros/identify.ts","webpack:///./src/macros/imaginarium.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///./src/apps/manual-token.ts","webpack:///./src/macros/manual-token.ts","webpack:///./src/macros/perception.ts","webpack:///./src/main.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/module.ts"],"sourcesContent":["export let MODULE_ID = ''\r\n\r\nexport function setModuleID(id: string) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function socketOn<T extends SocketPacket = SocketPacket>(callback: SocketCallback<T>) {\r\n    game.socket.on(`module.${MODULE_ID}`, callback)\r\n}\r\n\r\nexport function socketEmit<T extends SocketPacket = SocketPacket>(packet: T) {\r\n    game.socket.emit(`module.${MODULE_ID}`, packet)\r\n}\r\n","const diverseUUID = 'Compendium.pf2e.feats-srd.KlqKpeq5OmTRxVHb'\r\n\r\nexport function getEsotericSkill(actor: CharacterPF2e) {\r\n    const skillKeys = ['esoteric', 'esoteric-lore', 'lore-esoteric']\r\n    const skill = Object.values(actor.skills).find(x => skillKeys.includes(x!.slug))\r\n\r\n    if (!skill) ui.notifications.warn(`This character doesn't have the 'Esoteric' skill`)\r\n    return skill\r\n}\r\n\r\nexport function esotericCheckTitle() {\r\n    return game.i18n.format('PF2E.SkillCheckWithName', { skillName: 'Esoteric' })\r\n}\r\n\r\nexport function hasDiverseLore(actor: CharacterPF2e) {\r\n    return actor.itemTypes.feat.some(x => x.getFlag('core', 'sourceId') === diverseUUID)\r\n}\r\n","import { esotericCheckTitle, getEsotericSkill, hasDiverseLore } from './shared/esoteric'\r\n\r\nexport function esotericCheck(event: JQuery.TriggeredEvent, actor: ActorPF2e) {\r\n    if (!actor || !actor.isOwner || !actor.isOfType('character')) {\r\n        ui.notifications.warn('You must select a character token you own.')\r\n        return\r\n    }\r\n\r\n    const skill = getEsotericSkill(actor)\r\n    if (!skill) return\r\n\r\n    const options = new Set<string>()\r\n    const title = esotericCheckTitle()\r\n\r\n    let flavor = `<h4 class=\"action\">${title}</h4><section class=\"roll-note\">Can be used to Recall Knowledge regarding haunts, curses \r\nand creatures of any type, but can't be used to Recall Knowledge of other topics.</section>`\r\n\r\n    if (event.ctrlKey && hasDiverseLore(actor)) {\r\n        options.add('diverse-lore')\r\n\r\n        flavor += `<section class=\"roll-note\"><strong>Diverse Lore</strong> You can take a -2 penalty to your check to Recall \r\nKnowledge about any topic, not just the usual topics available for Esoteric Lore.</section>`\r\n    }\r\n\r\n    game.pf2e.Check.roll(\r\n        new game.pf2e.CheckModifier(flavor, skill),\r\n        {\r\n            actor,\r\n            title,\r\n            type: 'skill-check',\r\n            rollMode: 'blindroll',\r\n            options,\r\n        },\r\n        event\r\n    )\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: foundry.abstract.Document) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function flagPath(key: string) {\r\n    return `flags.${MODULE_ID}.key`\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: foundry.abstract.Document, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId<T extends DocumentUUID>(doc: ClientDocument) {\r\n    return doc.getFlag('core', 'sourceId') as T | undefined\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocument, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocument, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\n\r\ntype ActorItemTypes<A extends Actor> = (keyof A['itemTypes'])[]\r\n\r\nfunction getItemSourceIdCondition(sourceId: ItemUUID | ItemUUID[]) {\r\n    return Array.isArray(sourceId)\r\n        ? (item: Item) => includesSourceId(item, sourceId)\r\n        : (item: Item) => getSourceId(item) === sourceId\r\n}\r\n\r\nexport function getItems<A extends Actor, I extends Item = CollectionValue<A['items']>>(actor: A, itemTypes?: ActorItemTypes<A>) {\r\n    return (itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type as string]) : actor.items) as Embedded<I>[]\r\n}\r\n\r\nexport function findItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID,\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).find(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function hasItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).some(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function filterItemsWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).filter(getItemSourceIdCondition(sourceId))\r\n}\r\n","import { socketEmit } from '@utils/socket'\r\nimport { findItemWithSourceId, hasItemWithSourceId } from '@utils/foundry/item'\r\nimport { esotericCheckTitle, getEsotericSkill, hasDiverseLore } from './shared/esoteric'\r\n\r\nconst effectUUID = 'Compendium.idleuh.effects.MqgbuaqGMJ92VRze'\r\nconst targetUUID = 'Compendium.idleuh.effects.Lz5hNf4dbXKjDWBa'\r\nconst mortalUUID = 'Compendium.idleuh.effects.8BxBB5ztfRI9vFfZ'\r\nconst ffUUID = 'Compendium.pf2e.conditionitems.AJh5ex99aV6VTggg'\r\n\r\nexport async function exploitVulnerability(event: JQuery.TriggeredEvent, actor: ActorPF2e, filterTypes: WeaknessType[]) {\r\n    if (event.ctrlKey) {\r\n        if (game.user.isGM) cleanExploitVulnerabilityGM()\r\n        else socketEmit({ type: 'clean-exploit-vulnerability' })\r\n        ui.notifications.notify('All effects are being removed.')\r\n        return\r\n    }\r\n\r\n    const targets = game.user.targets as Set<TokenPF2e>\r\n    const [target] = targets\r\n    const targetActor = target?.actor\r\n\r\n    if (\r\n        !actor ||\r\n        !actor.isOwner ||\r\n        !actor.isOfType('character') ||\r\n        targets.size !== 1 ||\r\n        !targetActor ||\r\n        !targetActor.isOfType('creature')\r\n    ) {\r\n        ui.notifications.warn('You must select a character token you own and target another one.')\r\n        return\r\n    }\r\n\r\n    const skill = getEsotericSkill(actor)\r\n    if (!skill) return\r\n\r\n    const actionSlug = 'action:recall-knowledge'\r\n    const DCbyLevel = [14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 44, 46, 48, 50]\r\n    const targetLevel = targetActor.system.details.level.value\r\n    const dc = targetLevel < 0 ? 13 : DCbyLevel[targetLevel]!\r\n\r\n    const options = actor.getRollOptions(['all', 'skill-check', 'Esoteric'])\r\n    options.push(actionSlug)\r\n    options.push(`secret`)\r\n\r\n    const dv = targetActor.system.attributes.weaknesses\r\n    const vulnerability = dv.reduce((prev, curr) => {\r\n        if (curr.value > prev) return curr.value\r\n        return prev\r\n    }, 0)\r\n\r\n    const weaknesses = dv.filter(x => x.value === vulnerability).map(x => x.type)\r\n\r\n    const roll = (await game.pf2e.Check.roll(\r\n        new game.pf2e.CheckModifier('test', skill),\r\n        {\r\n            actor,\r\n            target: { actor: targetActor, token: target.document },\r\n            title: esotericCheckTitle(),\r\n            type: 'skill-check',\r\n            options,\r\n            dc: { value: dc },\r\n            createMessage: false,\r\n        },\r\n        event\r\n    ))!\r\n\r\n    const result = roll.total ?? 0\r\n    const die = roll.dice[0]?.total ?? 0\r\n    const success = getSuccess(result, die, dc)\r\n\r\n    const effect = findItemWithSourceId(actor, effectUUID, ['effect'])\r\n    if (success >= 1 && !effect) {\r\n        const data = (await fromUuid<EffectPF2e>(effectUUID))!.toObject()\r\n        actor.createEmbeddedDocuments('Item', [data])\r\n    } else if (success < 1) {\r\n        effect?.delete()\r\n        const flatEffect = hasItemWithSourceId(actor, ffUUID, ['condition'])\r\n        if (!flatEffect) {\r\n            const data = (await fromUuid<ConditionPF2e>(ffUUID))!.toObject()\r\n            actor.createEmbeddedDocuments('Item', [data])\r\n        }\r\n    }\r\n\r\n    createMsg(actor, targetActor, dc, result, die, success, vulnerability, weaknesses)\r\n\r\n    const filteredWeaknesses = weaknesses.filter(x => !filterTypes.includes(x))\r\n\r\n    const packet: ExploitVulnerabilityPacket = {\r\n        type: 'exploit-vulnerability',\r\n        actorId: actor.id,\r\n        targetId: target.id,\r\n        vulnerability: filteredWeaknesses.length ? vulnerability : 0,\r\n        success,\r\n    }\r\n\r\n    if (game.user.isGM) exploitVulnerabilityGM(packet)\r\n    else socketEmit(packet)\r\n}\r\n\r\nexport async function exploitVulnerabilityGM({ actorId, targetId, vulnerability, success }: ExploitVulnerabilityPacket) {\r\n    const actor = game.actors.get<CharacterPF2e>(actorId)\r\n    const targetActor = canvas.tokens.get(targetId)?.actor as ActorPF2e | undefined | null\r\n    if (!actor || !targetActor) return\r\n\r\n    const personal = 2 + Math.floor(actor.level / 2)\r\n    const isMortal = success > 1 && vulnerability >= personal\r\n\r\n    const mortalData = (await fromUuid<EffectPF2e>(mortalUUID))!.toObject()\r\n    const rule = {\r\n        key: 'Weakness',\r\n        type: 'piercing',\r\n        value: vulnerability,\r\n        predicate: ['origin:effect:exploit-vulnerability'],\r\n    }\r\n    mortalData.system.rules.push(rule)\r\n\r\n    for (const token of canvas.tokens.placeables) {\r\n        const tokenActor = token.actor as ActorPF2e\r\n        if (!tokenActor || tokenActor === actor) continue\r\n\r\n        const targetEffect = findItemWithSourceId(tokenActor, targetUUID, ['effect'])\r\n        const mortalsEffect = findItemWithSourceId(tokenActor, mortalUUID, ['effect'])\r\n\r\n        await targetEffect?.delete()\r\n        await mortalsEffect?.delete()\r\n\r\n        if (success < 1) continue\r\n\r\n        if (tokenActor === targetActor) {\r\n            const data = (await fromUuid<EffectPF2e>(targetUUID))!.toObject()\r\n            const rule = {\r\n                key: 'Weakness',\r\n                type: 'piercing',\r\n                value: isMortal ? vulnerability : personal,\r\n                predicate: ['origin:effect:exploit-vulnerability'],\r\n            }\r\n            data.system.rules.push(rule)\r\n            tokenActor.createEmbeddedDocuments('Item', [data])\r\n        } else if (isMortal && tokenActor.id === targetActor.id) {\r\n            tokenActor.createEmbeddedDocuments('Item', [mortalData])\r\n        }\r\n    }\r\n}\r\n\r\nexport function cleanExploitVulnerabilityGM() {\r\n    for (const token of canvas.tokens.placeables) {\r\n        const tokenActor = token.actor as ActorPF2e\r\n        if (!tokenActor) continue\r\n\r\n        const effect = findItemWithSourceId(tokenActor, effectUUID, ['effect'])\r\n        const targetEffect = findItemWithSourceId(tokenActor, targetUUID, ['effect'])\r\n        const mortalsEffect = findItemWithSourceId(tokenActor, mortalUUID, ['effect'])\r\n\r\n        effect?.delete()\r\n        targetEffect?.delete()\r\n        mortalsEffect?.delete()\r\n    }\r\n}\r\n\r\nfunction getSuccess(total: number, die: number, dc: number) {\r\n    let success = total >= dc + 10 ? 3 : total >= dc ? 2 : total > dc - 10 ? 1 : 0\r\n    if (die === 20) success++\r\n    else if (die === 1) success--\r\n    return success\r\n}\r\n\r\nfunction createMsg(\r\n    actor: CharacterPF2e,\r\n    target: ActorPF2e,\r\n    dc: number,\r\n    result: number,\r\n    die: number,\r\n    success: number,\r\n    vulnerability: number,\r\n    weaknesses: string[]\r\n) {\r\n    const by = result - dc\r\n    const mod = result - die\r\n    const css = success >= 3 ? 'criticalSuccess' : success === 2 ? 'success' : success === 1 ? 'failure' : 'criticalFailure'\r\n    const txt = success >= 3 ? 'Critical Success' : success === 2 ? 'Success' : success === 1 ? 'Failure' : 'Critical Failure'\r\n\r\n    let flavor = `<h4 class=\"action\"><span class=\"pf2-icon\">A</span> <b>Exploit Vulnerability</b> <p class=\"compact-text\">(Esoteric Check)</p></h4>\r\n<div class=\"target-dc-result\" data-visibility=\"gm\">\r\n    <div class=\"target-dc\" data-visibility=\"gm\"><span data-visibility=\"gm\" data-whose=\"target\">\r\n        Target: ${target.name}</span> <span data-visibility=\"gm\" data-whose=\"target\">(Standard DC ${dc})</span></div>\r\n    <div class=\"result degree-of-success\" data-visibility=\"gm\">\r\n        Result: <span title=\"Roll: ${die} ${mod >= 0 ? '+' : '-'} ${Math.abs(mod)}\">${result}</span> \r\n        <span data-whose=\"self\" class=\"${css}\">${txt}</span> <span data-whose=\"target\">by ${by >= 0 ? '+' : ''}${by}</span>\r\n    </div>\r\n</div>`\r\n\r\n    if (success >= 2 && weaknesses.length) {\r\n        flavor += `<div><strong>[ ${weaknesses.join(', ')} ]</strong> = ${vulnerability}</div>`\r\n    }\r\n\r\n    flavor += '<section class=\"roll-note\">'\r\n    if (success >= 3) {\r\n        flavor += `<strong>Critical Success</strong> You remember the creature's weaknesses, and as you empower your esoterica, \r\nyou have a flash of insight that grants even more knowledge about the creature. \r\nYou learn all of the creature's resistances, weaknesses, and immunities, \r\nincluding the amounts of the resistances and weaknesses and any unusual weaknesses or vulnerabilities, \r\nsuch as what spells will pass through a golem's antimagic. \r\nYou can exploit either the creature's mortal weakness or personal antithesis (see the Exploit Vulnerability class feature). \r\nYour unarmed and weapon Strikes against the creature also become magical if they weren't already.`\r\n    } else if (success === 2) {\r\n        flavor += `<strong>Success</strong> You recall an important fact about the creature, \r\nlearning its highest weakness (or one of its highest weaknesses, if it has multiple with the same value) but not its other weaknesses, \r\nresistances, or immunities. You can exploit either the creature's mortal weakness or personal antithesis. \r\nYour unarmed and weapon Strikes against the creature also become magical if they weren't already.`\r\n    } else if (success === 1) {\r\n        flavor += `<strong>Failure</strong> Failing to recall a salient weakness about the creature, \r\nyou instead attempt to exploit a more personal vulnerability. \r\nYou can exploit only the creature's personal antithesis. \r\nYour unarmed and weapon Strikes against the creature also become magical if they weren't already.`\r\n    } else {\r\n        flavor += `<strong>Critical Failure</strong> You couldn't remember the right object to use and become distracted while you rummage \r\nthrough your esoterica. You become flat-footed until the beginning of your next turn.`\r\n    }\r\n    flavor += '</section>'\r\n\r\n    if (hasDiverseLore(actor) && success >= 2) flavor += getDiverseLoreMsg(target, result, die)\r\n\r\n    ChatMessage.create({ flavor, actor })\r\n}\r\n\r\nfunction getDiverseLoreMsg(target: ActorPF2e, result: number, die: number) {\r\n    const progression = (target as NPCPF2e).system.details.identification?.skill.progression ?? []\r\n    const knowledges = progression.map(dc => {\r\n        const success = getSuccess(result, die, dc)\r\n        const color = success >= 3 ? 'green' : success === 2 ? 'blue' : '#ff4500'\r\n        const title = success >= 3 ? 'Critical Success' : success === 2 ? 'Success' : 'Failure'\r\n        return `<span style=\"color: ${color};\" title=\"${title}\">${dc}</span>`\r\n    })\r\n    const dcs = knowledges.length ? ` <span data-visibility=\"gm\">${knowledges.join(', ')}</span>` : ''\r\n\r\n    return `<section class=\"roll-note\">\r\n    <strong>Diverse Lore</strong> Compare the result of your Esoteric Lore check to the DC${dcs} to Recall Knowledge for that creature; \r\n    if that number would be a success or a critical success, you gain information as if you had succeeded at the Recall Knowledge check.\r\n</section>`\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","const dcByLevel = new Map<number, number>()\r\ndcByLevel.set(-1, 13)\r\ndcByLevel.set(0, 14)\r\ndcByLevel.set(1, 15)\r\ndcByLevel.set(2, 16)\r\ndcByLevel.set(3, 18)\r\ndcByLevel.set(4, 19)\r\ndcByLevel.set(5, 20)\r\ndcByLevel.set(6, 22)\r\ndcByLevel.set(7, 23)\r\ndcByLevel.set(8, 24)\r\ndcByLevel.set(9, 26)\r\ndcByLevel.set(10, 27)\r\ndcByLevel.set(11, 28)\r\ndcByLevel.set(12, 30)\r\ndcByLevel.set(13, 31)\r\ndcByLevel.set(14, 32)\r\ndcByLevel.set(15, 34)\r\ndcByLevel.set(16, 35)\r\ndcByLevel.set(17, 36)\r\ndcByLevel.set(18, 38)\r\ndcByLevel.set(19, 39)\r\ndcByLevel.set(20, 40)\r\ndcByLevel.set(21, 42)\r\ndcByLevel.set(22, 44)\r\ndcByLevel.set(23, 46)\r\ndcByLevel.set(24, 48)\r\ndcByLevel.set(25, 50)\r\n\r\nconst dcAdjustments = new Map<DCAdjustment, number>()\r\ndcAdjustments.set('incredibly easy', -10)\r\ndcAdjustments.set('very easy', -5)\r\ndcAdjustments.set('easy', -2)\r\ndcAdjustments.set('normal', 0)\r\ndcAdjustments.set('hard', 2)\r\ndcAdjustments.set('very hard', 5)\r\ndcAdjustments.set('incredibly hard', 10)\r\n\r\n/**\r\n * Normal Level Based DCs\r\n * @param level\r\n * @param proficiencyWithoutLevel\r\n */\r\nexport function calculateDC(level: number, { proficiencyWithoutLevel = false, rarity = 'common' }: DCOptions = {}): number {\r\n    // assume level 0 if garbage comes in. We cast level to number because the backing data may actually have it\r\n    // stored as a string, which we can't catch at compile time\r\n    const dc = dcByLevel.get(level) ?? 14\r\n    if (proficiencyWithoutLevel) {\r\n        // -1 shouldn't be subtracted since it's just\r\n        // a creature level and not related to PC levels\r\n        return adjustDCByRarity(dc - Math.max(level, 0), rarity)\r\n    } else {\r\n        return adjustDCByRarity(dc, rarity)\r\n    }\r\n}\r\n\r\nexport function adjustDCByRarity(dc: number, rarity: Rarity = 'common') {\r\n    return adjustDC(dc, rarityToDCAdjustment(rarity))\r\n}\r\n\r\nexport function adjustDC(dc: number, adjustment: DCAdjustment = 'normal') {\r\n    return dc + (dcAdjustments.get(adjustment) ?? 0)\r\n}\r\n\r\nexport function rarityToDCAdjustment(rarity: Rarity = 'common'): PositiveDCAdjustment {\r\n    if (rarity === 'uncommon') {\r\n        return 'hard'\r\n    } else if (rarity === 'rare') {\r\n        return 'very hard'\r\n    } else if (rarity === 'unique') {\r\n        return 'incredibly hard'\r\n    } else {\r\n        return 'normal'\r\n    }\r\n}\r\n","import { chatUUID } from '@utils/foundry/uuid'\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'] as const)\r\n\r\nexport const SPELL_COMPONENTS = ['focus', 'material', 'somatic', 'verbal'] as const\r\n\r\nconst scrolls: (ConsumablePF2e | null)[] = []\r\nexport async function createSpellScroll(uuid: ItemUUID, level: OneToTen | false, temp = false) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = getScrollCompendiumUUID(level)\r\n    scrolls[level] ??= await fromUuid<ConsumablePF2e>(scrollUUID)\r\n\r\n    const scroll = scrolls[level]?.toObject()\r\n    if (!scroll) return null\r\n\r\n    spell.system.location.heightenedLevel = level\r\n\r\n    scroll.name = `Scroll of ${spell.name} (Level ${level})`\r\n    scroll.system.temporary = temp\r\n    scroll.system.spell = spell\r\n    scroll.system.traits.value.push(...spell.system.traditions.value)\r\n\r\n    const sourceId = spell.flags.core?.sourceId\r\n    if (sourceId) scroll.system.description.value = `${chatUUID(sourceId)}\\n<hr />${scroll.system.description.value}`\r\n\r\n    return scroll\r\n}\r\n\r\nfunction getScrollCompendiumUUID(level: OneToTen): ItemUUID {\r\n    return `Compendium.pf2e.equipment-srd.${scrollCompendiumIds[level]}`\r\n}\r\n\r\nconst scrollCompendiumIds: Record<number, string> = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n","const wordCharacter = String.raw`[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacter = String.raw`[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacterRE = new RegExp(nonWordCharacter, 'gu')\r\n\r\nconst wordBoundary = String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`\r\nconst nonWordBoundary = String.raw`(?:${wordCharacter})(?=${wordCharacter})`\r\nconst lowerCaseLetter = String.raw`\\p{Lowercase_Letter}`\r\nconst upperCaseLetter = String.raw`\\p{Uppercase_Letter}`\r\nconst lowerCaseThenUpperCaseRE = new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`, 'gu')\r\n\r\nconst nonWordCharacterHyphenOrSpaceRE = /[^-\\p{White_Space}\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]/gu\r\nconst upperOrWordBoundariedLowerRE = new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`, 'gu')\r\n\r\n/** Check if an element is present in the provided set. Especially useful for checking against literal sets */\r\nexport function setHasElement<T extends Set<unknown>>(set: T, value: unknown): value is SetElement<T> {\r\n    return set.has(value)\r\n}\r\n\r\n/**\r\n * The system's sluggification algorithm for labels and other terms.\r\n * @param text The text to sluggify\r\n * @param [options.camel=null] The sluggification style to use\r\n */\r\nexport function sluggify(text: string, { camel = null }: { camel?: 'dromedary' | 'bactrian' | null } = {}): string {\r\n    // Sanity check\r\n    if (typeof text !== 'string') {\r\n        console.warn('Non-string argument passed to `sluggify`')\r\n        return ''\r\n    }\r\n\r\n    switch (camel) {\r\n        case null:\r\n            return text\r\n                .replace(lowerCaseThenUpperCaseRE, '$1-$2')\r\n                .toLowerCase()\r\n                .replace(/['’]/g, '')\r\n                .replace(nonWordCharacterRE, ' ')\r\n                .trim()\r\n                .replace(/[-\\s]+/g, '-')\r\n        case 'bactrian': {\r\n            const dromedary = sluggify(text, { camel: 'dromedary' })\r\n            return dromedary.charAt(0).toUpperCase() + dromedary.slice(1)\r\n        }\r\n        case 'dromedary':\r\n            return text\r\n                .replace(nonWordCharacterHyphenOrSpaceRE, '')\r\n                .replace(/[-_]+/g, ' ')\r\n                .replace(upperOrWordBoundariedLowerRE, (part, index) => (index === 0 ? part.toLowerCase() : part.toUpperCase()))\r\n                .replace(/\\s+/g, '')\r\n        default:\r\n            throw ErrorPF2e(\"I don't think that's a real camel.\")\r\n    }\r\n}\r\n\r\nexport function ErrorPF2e(message: string): Error {\r\n    return Error(`PF2e System | ${message}`)\r\n}\r\n","export const SKILL_DICTIONARY = {\r\n    acr: 'acrobatics',\r\n    arc: 'arcana',\r\n    ath: 'athletics',\r\n    cra: 'crafting',\r\n    dec: 'deception',\r\n    dip: 'diplomacy',\r\n    itm: 'intimidation',\r\n    med: 'medicine',\r\n    nat: 'nature',\r\n    occ: 'occultism',\r\n    prf: 'performance',\r\n    rel: 'religion',\r\n    soc: 'society',\r\n    ste: 'stealth',\r\n    sur: 'survival',\r\n    thi: 'thievery',\r\n} as const\r\n\r\nexport const SKILL_ABBREVIATIONS = Object.keys(SKILL_DICTIONARY) as (keyof typeof SKILL_DICTIONARY)[]\r\n\r\nexport const SKILL_LONG_FORMS = Object.values(SKILL_DICTIONARY)\r\n","import { templatePath } from '@utils/foundry/path'\r\nimport { identifyItem } from '@utils/pf2e/item'\r\nimport { SKILL_ABBREVIATIONS, SKILL_DICTIONARY } from '@utils/pf2e/skills'\r\n\r\nexport class Identify extends Application {\r\n    items: PhysicalItemPF2e[]\r\n\r\n    constructor(items: PhysicalItemPF2e[], options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this.items = items\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'idleuh-identify',\r\n            title: 'Identify Items',\r\n            template: templatePath('identify.html'),\r\n            width: 500,\r\n        })\r\n    }\r\n\r\n    getData(options?: Partial<ApplicationOptions> | undefined) {\r\n        return mergeObject(super.getData(options), {\r\n            items: this.items.map(item => {\r\n                const data = item.system.identification.identified\r\n                const identified = item.isIdentified\r\n                const checked = !identified && (item.getFlag('world', 'identify.checked') as boolean)\r\n\r\n                const classes = [] as string[]\r\n                if (identified) classes.push('identified')\r\n                if (checked) classes.push('checked')\r\n\r\n                return {\r\n                    uuid: item.uuid,\r\n                    img: data.img,\r\n                    name: item.isOfType('treasure') ? `($) ${data.name}` : data.name,\r\n                    css: classes.join(' '),\r\n                    identified,\r\n                    checked,\r\n                }\r\n            }),\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>) {\r\n        // super.activateListeners(html)\r\n\r\n        html.find('[data-action=\"chat\"]').on('click', this.#onChat.bind(this))\r\n        html.find('[data-action=\"checks\"]').on('click', this.#onChecks.bind(this))\r\n        html.find('[data-action=\"identify\"]').on('click', this.#onIdentify.bind(this))\r\n        html.find('[data-action=\"remove\"]').on('click', this.#onRemove.bind(this))\r\n        html.find('[data-action=\"reset\"]').on('click', this.#onReset.bind(this))\r\n    }\r\n\r\n    async #onChat(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        item?.toMessage(undefined, { create: true })\r\n    }\r\n\r\n    async #onChecks(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        if (!item) return\r\n\r\n        const itemImg = item.system.identification.unidentified.img\r\n        const itemName = item.system.identification.unidentified.name\r\n        const identifiedName = item.system.identification.identified.name\r\n\r\n        const notMatchingTraditionModifier = game.settings.get('pf2e', 'identifyMagicNotMatchingTraditionModifier') as number\r\n        const proficiencyWithoutLevel = game.settings.get('pf2e', 'proficiencyVariant') === 'ProficiencyWithoutLevel'\r\n        const dcs = identifyItem(item, { proficiencyWithoutLevel, notMatchingTraditionModifier })\r\n\r\n        const skills = Object.entries(dcs).map(([shortForm, dc]) => {\r\n            shortForm = shortForm === 'dc' ? 'cra' : shortForm\r\n            const name = game.i18n.localize(SKILL_DICTIONARY[shortForm as SkillAbbreviation])\r\n            return { shortForm, dc, name }\r\n        })\r\n\r\n        const content = await renderTemplate('systems/pf2e/templates/actors/identify-item-chat-skill-checks.hbs', {\r\n            itemImg,\r\n            itemName,\r\n            identifiedName,\r\n            skills,\r\n        })\r\n\r\n        await ChatMessage.create({ user: game.user.id, content })\r\n    }\r\n\r\n    async #onIdentify(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        if (!item) return\r\n\r\n        await item.update({\r\n            'system.identification.status': item.isIdentified ? 'unidentified' : 'identified',\r\n            'system.identification.unidentified': item.getMystifiedData('unidentified'),\r\n            'flags.world.identify.checked': false,\r\n        })\r\n\r\n        this.render()\r\n    }\r\n\r\n    async #onRemove(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        if (!item) return\r\n\r\n        const checked = item.getFlag('world', 'identify.checked')\r\n        await item.setFlag('world', 'identify.checked', !checked)\r\n\r\n        this.render()\r\n    }\r\n\r\n    async #onReset(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        for (const item of this.items) {\r\n            if (item.isIdentified || !item.getFlag('world', 'identify.checked')) continue\r\n            await item.setFlag('world', 'identify.checked', false)\r\n        }\r\n\r\n        this.render()\r\n    }\r\n}\r\n\r\nasync function getItemFromEvent(event: JQuery.TriggeredEvent<any, any, HTMLElement>) {\r\n    const parent = $(event.currentTarget).closest('[data-item]')\r\n    const uuid = parent.attr('data-item') as string\r\n    const item = await fromUuid(uuid)\r\n    if (!item) parent.remove()\r\n    return item as PhysicalItemPF2e | null\r\n}\r\n","import { adjustDCByRarity, calculateDC } from '@utils/pf2e/dc'\r\nimport { MAGIC_TRADITIONS } from '@utils/pf2e/spell'\r\nimport { setHasElement } from '@utils/pf2e/utils'\r\n\r\nexport function identifyItem(\r\n    item: PhysicalItemPF2e,\r\n    { proficiencyWithoutLevel = false, notMatchingTraditionModifier }: IdentifyItemOptions\r\n): GenericIdentifyDCs | IdentifyMagicDCs | IdentifyAlchemyDCs {\r\n    const baseDC = calculateDC(item.level, { proficiencyWithoutLevel })\r\n    const rarity = getDcRarity(item)\r\n    const dc = adjustDCByRarity(baseDC, rarity)\r\n    if (item.isMagical) {\r\n        return identifyMagic(item, dc, notMatchingTraditionModifier)\r\n    } else if (item.isAlchemical) {\r\n        return { cra: dc }\r\n    } else {\r\n        return { dc: dc }\r\n    }\r\n}\r\n\r\n/** All cursed items are incredibly hard to identify */\r\nfunction getDcRarity(item: PhysicalItemPF2e): Rarity {\r\n    return item.traits.has('cursed') ? 'unique' : item.rarity\r\n}\r\n\r\nfunction identifyMagic(item: PhysicalItemPF2e, baseDc: number, notMatchingTraditionModifier: number) {\r\n    const result = {\r\n        occult: baseDc,\r\n        primal: baseDc,\r\n        divine: baseDc,\r\n        arcane: baseDc,\r\n    }\r\n    const traditions = getMagicTraditions(item)\r\n    for (const key of MAGIC_TRADITIONS) {\r\n        // once an item has a magic tradition, all skills\r\n        // that don't match the tradition are hard\r\n        if (traditions.size > 0 && !traditions.has(key)) {\r\n            result[key] = baseDc + notMatchingTraditionModifier\r\n        }\r\n    }\r\n    return { arc: result.arcane, nat: result.primal, rel: result.divine, occ: result.occult }\r\n}\r\n\r\n/**\r\n * Extract all traits from an item, that match a magic tradition\r\n */\r\nfunction getMagicTraditions(item: PhysicalItemPF2e): Set<MagicTradition> {\r\n    const traits: string[] = item.system.traits.value\r\n    return new Set(traits.filter((t): t is MagicTradition => setHasElement(MAGIC_TRADITIONS, t)))\r\n}\r\n\r\nexport function getChoiSetRuleSelection<T extends unknown>(item: ItemPF2e, option: string) {\r\n    const rules = item._source.system.rules as ChoiceSetSource[]\r\n    const rule = rules.find(rule => rule.key === 'ChoiceSet' && rule.rollOption === option)\r\n    return rule?.selection as T | undefined\r\n}\r\n","import { Identify } from '@apps/identify'\r\n\r\nexport function identify() {\r\n    if (!game.user.isGM) {\r\n        ui.notifications.warn('You not the GM yo!')\r\n        return\r\n    }\r\n\r\n    const actors = game.actors\r\n    const items = actors.reduce((acc, actor) => {\r\n        if (!actor.hasPlayerOwner) return acc\r\n        const filtered = actor.items.filter(item => item.isOfType('physical') && !item.isIdentified) as PhysicalItemPF2e[]\r\n        acc.push(...filtered)\r\n        return acc\r\n    }, [] as PhysicalItemPF2e[])\r\n\r\n    new Identify(items).render(true)\r\n}\r\n","import { createSpellScroll } from '@utils/pf2e/spell'\r\n\r\nconst packId = 'pf2e.spells-srd'\r\nconst bookId = 'Item.dcALVAyJbYSovzqt'\r\n\r\nexport async function ripImaginarium(actor: ActorPF2e) {\r\n    if (!actor) return ui.notifications.warn('You must select an actor with the Imaginarium')\r\n\r\n    const book = actor.itemTypes.equipment.find(x => x.getFlag('core', 'sourceId') === bookId)\r\n    if (!book || book.system.equipped.carryType === 'dropped')\r\n        return ui.notifications.warn(\"This actor doesn't have the Imaginarium in their possession\")\r\n\r\n    const level = Math.floor(actor.level / 2) as OneToTen\r\n    const pack = game.packs.get(packId)!\r\n    const index = await pack.getIndex({ fields: ['system.level.value', 'system.traits', 'system.category.value'] })\r\n\r\n    const spells = index.filter(\r\n        x =>\r\n            x.system.level.value <= level &&\r\n            !x.system.traits.value.includes('cantrip') &&\r\n            x.system.category.value !== 'ritual' &&\r\n            x.system.category.value !== 'focus' &&\r\n            x.system.traits.rarity === 'common'\r\n    )\r\n\r\n    const roll = Math.floor(Math.random() * spells.length)\r\n    const spell = spells[roll]\r\n    const uuid = `Compendium.${packId}.${spell._id}` as ItemUUID\r\n\r\n    let messageUUID = uuid\r\n    let extraMessage = ''\r\n    const scroll = await createSpellScroll(uuid, level)\r\n    if (scroll) {\r\n        scroll.name = scroll.name + ' *'\r\n        const [item] = (await actor.createEmbeddedDocuments('Item', [scroll])) as ItemPF2e[]\r\n        extraMessage = ' and received the following:'\r\n        messageUUID = item.uuid\r\n    }\r\n\r\n    ChatMessage.create({\r\n        content: `<p>Ripped the last page of the Imaginarium${extraMessage}</p><p>@UUID[${messageUUID}]</p>`,\r\n        speaker: ChatMessage.getSpeaker({ actor: actor as Actor }),\r\n    })\r\n}\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n","import { templatePath } from '@utils/foundry/path'\r\n\r\nexport class ManualToken extends FormApplication<TokenDocumentPF2e> {\r\n    static get defaultOptions(): FormApplicationOptions {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'idleuh-manual-token',\r\n            template: templatePath('manual-token.html'),\r\n            title: 'Manual Token Update',\r\n            width: 500,\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find('button[type=button]').on('click', () => this.close())\r\n\r\n        const scale = html.find('input[name=scale]') as JQuery<HTMLInputElement>\r\n        const scaleValue = scale.next('span')\r\n        scale.on('input', () => {\r\n            const val = scale[0].valueAsNumber\r\n            scaleValue.text(val.toFixed(2))\r\n        })\r\n\r\n        const grid = html.find('input[name=grid]') as JQuery<HTMLInputElement>\r\n        const gridValue = grid.next('span')\r\n        grid.on('input', () => {\r\n            const val = grid[0].valueAsNumber\r\n            gridValue.text(val.toFixed(1))\r\n        })\r\n    }\r\n\r\n    protected async _updateObject(event: Event, formData: Record<string, unknown>) {\r\n        const data = this.object\r\n\r\n        const newData = {\r\n            ['displayName']: Number(formData.name),\r\n            ['displayBars']: Number(formData.hp),\r\n            ['texture.src']: formData.img,\r\n            ['flags.pf2e.linkToActorSize']: !!formData.link,\r\n            ['width']: Number(formData.grid),\r\n            ['height']: Number(formData.grid),\r\n            ['texture.scaleX']: Number(formData.scale),\r\n            ['texture.scaleY']: Number(formData.scale),\r\n        }\r\n\r\n        const update = {}\r\n        for (const [k, v] of Object.entries(newData)) {\r\n            if (getProperty(data, k) === v) continue\r\n            setProperty(update, k, v)\r\n        }\r\n\r\n        if (Object.keys(update).length) this.object.update(update)\r\n    }\r\n}\r\n","import { ManualToken } from '@apps/manual-token'\r\n\r\nexport async function manualToken(token: TokenPF2e) {\r\n    if (!token || !token.isOwner) {\r\n        ui.notifications.warn('You need to select an owned token.')\r\n        return\r\n    }\r\n    new ManualToken(token.document).render(true)\r\n}\r\n","const proficiency = ['trained', 'expert', 'master', 'legendary', 'untrained']\r\n\r\nexport async function groupPerception() {\r\n    if (!game.user.isGM) {\r\n        ui.notifications.warn('You not the GM yo!')\r\n        return\r\n    }\r\n\r\n    let result = '<hr>'\r\n\r\n    const tokens = canvas.tokens\r\n    for (const token of tokens.placeables) {\r\n        const actor = token.actor\r\n        if (!actor || !actor.isOfType('character', 'npc') || !actor.hasPlayerOwner || !actor.attributes.perception) continue\r\n        result += await rollPerception(actor)\r\n    }\r\n\r\n    ChatMessage.create({ content: result, flavor: 'Group Perception Checks', whisper: [game.user.id] })\r\n}\r\n\r\nasync function rollPerception(actor: CharacterPF2e | NPCPF2e) {\r\n    const perception = actor.attributes.perception\r\n    const check = new game.pf2e.CheckModifier('', perception)\r\n    const roll = await game.pf2e.Check.roll(check, { actor: actor, type: 'skill-check', createMessage: false, skipDialog: true })\r\n    if (!roll) return ''\r\n\r\n    const rank = proficiency[(perception.rank ?? 1) - 1]\r\n    const die = roll.dice[0].total\r\n    if (die === undefined) return ''\r\n\r\n    let result = `<div style=\"display:flex;justify-content:space-between;\" title=\"${roll.result}\">`\r\n    result += `<span>${actor.name} (${rank})</span><span`\r\n    if (die == 20) result += ' style=\"color: green;\"'\r\n    else if (die == 1) result += ' style=\"color: red;\"'\r\n\r\n    return `${result}>${roll.total}</span></div>`\r\n}\r\n","import { getCurrentModule } from '@utils/foundry/module'\r\nimport { setModuleID } from '@utils/module'\r\nimport { socketOn } from '@utils/socket'\r\nimport { esotericCheck } from './macros/esoteric'\r\nimport { cleanExploitVulnerabilityGM, exploitVulnerability, exploitVulnerabilityGM } from './macros/exploit-vulnerability'\r\nimport { identify } from './macros/identify'\r\nimport { ripImaginarium } from './macros/imaginarium'\r\nimport { manualToken } from './macros/manual-token'\r\nimport { groupPerception } from './macros/perception'\r\n\r\nsetModuleID('idleuh')\r\n\r\nHooks.once('init', () => {\r\n    getCurrentModule<IdleuhApi>().api = {\r\n        macros: {\r\n            exploitVulnerability,\r\n            esotericCheck,\r\n            manualToken,\r\n            groupPerception,\r\n            identify,\r\n            ripImaginarium,\r\n        },\r\n    }\r\n\r\n    // game.settings.register(MODULE_ID, 'bff', {\r\n    //     name: \"Enable BFF's Ire\",\r\n    //     hint: \"Should the BFF's Ire be handled.\",\r\n    //     type: Boolean,\r\n    //     default: true,\r\n    //     config: true,\r\n    //     scope: 'world',\r\n    //     onChange: enableBFF,\r\n    // })\r\n\r\n    // game.settings.register(MODULE_ID, 'bffDistance', {\r\n    //     name: \"BFF's Ire Distance\",\r\n    //     hint: 'Distance in square(s) for the curse to apply.',\r\n    //     type: Number,\r\n    //     default: 1,\r\n    //     config: true,\r\n    //     scope: 'world',\r\n    // })\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    // if (getSetting('bff')) enableBFF(true)\r\n    if (game.user.isGM) {\r\n        socketOn(onPacketReceived)\r\n    }\r\n})\r\n\r\nfunction onPacketReceived(packet: ModulePacket) {\r\n    if (packet.type === 'exploit-vulnerability') exploitVulnerabilityGM(packet)\r\n    else if (packet.type === 'clean-exploit-vulnerability') cleanExploitVulnerabilityGM()\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\ntype OwnModule = 'anonymous' | 'idleuh' | 'pf2e-hero-actions'\r\n\r\ntype ReturnedModule<T extends Record<string, any> | unknown = unknown> = Module<T> | undefined\r\ntype ReturnedModuleApi<T extends Record<string, any>> = Module<T>['api'] | undefined\r\n\r\nexport function getModule<T extends Record<string, any> | unknown = unknown>(id: string | OwnModule) {\r\n    return game.modules.get(id) as ReturnedModule<T>\r\n}\r\n\r\nexport function getCurrentModule<T extends Record<string, any> | unknown = unknown>() {\r\n    return getModule(MODULE_ID) as Module<T>\r\n}\r\n\r\nexport function getModuleApi<T extends Record<string, any>>(id: string | OwnModule) {\r\n    return getModule<T>(id)?.api as ReturnedModuleApi<T>\r\n}\r\n"],"names":["socketEmit","packet","game","socket","emit","diverseUUID","getEsotericSkill","actor","skillKeys","skill","Object","values","skills","find","x","includes","slug","ui","notifications","warn","esotericCheckTitle","i18n","format","skillName","hasDiverseLore","itemTypes","feat","some","getFlag","esotericCheck","event","isOwner","isOfType","options","Set","title","flavor","ctrlKey","add","pf2e","Check","roll","CheckModifier","type","rollMode","getSourceId","doc","getItemSourceIdCondition","sourceId","Array","isArray","item","list","includesSourceId","getItems","flatMap","items","findItemWithSourceId","effectUUID","targetUUID","mortalUUID","ffUUID","async","exploitVulnerability","filterTypes","user","isGM","cleanExploitVulnerabilityGM","notify","targets","target","targetActor","size","targetLevel","system","details","level","value","dc","getRollOptions","push","dv","attributes","weaknesses","vulnerability","reduce","prev","curr","filter","map","token","document","createMessage","result","total","die","dice","success","getSuccess","effect","data","fromUuid","toObject","createEmbeddedDocuments","delete","flatEffect","hasItemWithSourceId","by","mod","css","txt","name","Math","abs","length","join","knowledges","identification","progression","getDiverseLoreMsg","ChatMessage","create","createMsg","filteredWeaknesses","actorId","id","targetId","exploitVulnerabilityGM","actors","get","canvas","tokens","personal","floor","isMortal","mortalData","rule","key","predicate","rules","placeables","tokenActor","targetEffect","mortalsEffect","templatePath","path","dcByLevel","Map","set","dcAdjustments","adjustDCByRarity","rarity","adjustment","adjustDC","rarityToDCAdjustment","MAGIC_TRADITIONS","scrolls","scrollCompendiumIds","wordCharacter","String","raw","nonWordCharacter","wordBoundary","RegExp","nonWordBoundary","lowerCaseLetter","upperCaseLetter","SKILL_DICTIONARY","acr","arc","ath","cra","dec","dip","itm","med","nat","occ","prf","rel","soc","ste","sur","thi","keys","Identify","Application","constructor","super","this","defaultOptions","mergeObject","template","width","getData","identified","isIdentified","checked","classes","uuid","img","activateListeners","html","on","bind","getItemFromEvent","toMessage","undefined","itemImg","unidentified","itemName","identifiedName","notMatchingTraditionModifier","settings","dcs","proficiencyWithoutLevel","baseDC","max","calculateDC","traits","has","getDcRarity","isMagical","baseDc","occult","primal","divine","arcane","traditions","t","setHasElement","getMagicTraditions","identifyMagic","isAlchemical","identifyItem","entries","shortForm","localize","content","renderTemplate","update","getMystifiedData","render","setFlag","preventDefault","parent","$","currentTarget","closest","attr","remove","identify","acc","hasPlayerOwner","filtered","packId","bookId","ripImaginarium","book","equipment","equipped","carryType","pack","packs","spells","getIndex","fields","category","spell","random","_id","messageUUID","extraMessage","scroll","temp","scrollUUID","getScrollCompendiumUUID","location","heightenedLevel","temporary","flags","core","description","chatUUID","createSpellScroll","speaker","getSpeaker","ManualToken","FormApplication","close","scale","scaleValue","next","val","valueAsNumber","text","toFixed","grid","gridValue","formData","object","newData","Number","hp","link","k","v","getProperty","setProperty","manualToken","proficiency","groupPerception","perception","rollPerception","whisper","check","skipDialog","rank","onPacketReceived","Hooks","once","modules","getModule","api","macros","callback"],"sourceRoot":""}