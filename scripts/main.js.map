{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/socket.ts","webpack:///./src/macros/shared/esoteric.ts","webpack:///./src/macros/esoteric.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/item.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/spell.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/utils.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/dc.ts","webpack:///./src/macros/exploit-vulnerability.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///./src/apps/identify.ts","webpack:///./src/macros/identify.ts","webpack:///./src/macros/imaginarium.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///./src/apps/manual-token.ts","webpack:///./src/macros/manual-token.ts","webpack:///./src/macros/perception.ts","webpack:///./src/macros/inspiring-marshal.ts","webpack:///./src/main.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/settings.ts"],"sourcesContent":["export let MODULE_ID = ''\r\nexport let TYPE = 'module'\r\n\r\nexport function setModuleID(id: string, isSystem = false) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n    TYPE = isSystem ? 'system' : 'module'\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function socketOn<T extends SocketPacket = SocketPacket>(callback: SocketCallback<T>) {\r\n    game.socket.on(`module.${MODULE_ID}`, callback)\r\n}\r\n\r\nexport function socketEmit<T extends SocketPacket = SocketPacket>(packet: T) {\r\n    game.socket.emit(`module.${MODULE_ID}`, packet)\r\n}\r\n","const diverseUUID = 'Compendium.pf2e.feats-srd.Item.KlqKpeq5OmTRxVHb'\r\n\r\nexport function getEsotericSkill(actor: CharacterPF2e) {\r\n    const skillKeys = ['esoteric', 'esoteric-lore', 'lore-esoteric']\r\n    const skill = Object.values(actor.skills).find(x => skillKeys.includes(x!.slug))\r\n\r\n    if (!skill) ui.notifications.warn(`This character doesn't have the 'Esoteric' skill`)\r\n    return skill\r\n}\r\n\r\nexport function esotericCheckTitle() {\r\n    return game.i18n.format('PF2E.SkillCheckWithName', { skillName: 'Esoteric' })\r\n}\r\n\r\nexport function hasDiverseLore(actor: CharacterPF2e) {\r\n    return actor.itemTypes.feat.some(x => x.getFlag('core', 'sourceId') === diverseUUID)\r\n}\r\n","import { esotericCheckTitle, getEsotericSkill, hasDiverseLore } from './shared/esoteric'\r\n\r\nexport function esotericCheck(event: JQuery.TriggeredEvent, actor: ActorPF2e) {\r\n    if (!actor || !actor.isOwner || !actor.isOfType('character')) {\r\n        ui.notifications.warn('You must select a character token you own.')\r\n        return\r\n    }\r\n\r\n    const skill = getEsotericSkill(actor)\r\n    if (!skill) return\r\n\r\n    const options = new Set<string>()\r\n    const title = esotericCheckTitle()\r\n\r\n    let flavor = `<h4 class=\"action\">${title}</h4><section class=\"roll-note\">Can be used to Recall Knowledge regarding haunts, curses \r\nand creatures of any type, but can't be used to Recall Knowledge of other topics.</section>`\r\n\r\n    if (event.ctrlKey && hasDiverseLore(actor)) {\r\n        options.add('diverse-lore')\r\n\r\n        flavor += `<section class=\"roll-note\"><strong>Diverse Lore</strong> You can take a -2 penalty to your check to Recall \r\nKnowledge about any topic, not just the usual topics available for Esoteric Lore.</section>`\r\n    }\r\n\r\n    game.pf2e.Check.roll(new game.pf2e.CheckModifier(flavor, skill), {\r\n        actor,\r\n        title,\r\n        type: 'skill-check',\r\n        rollMode: 'blindroll',\r\n        options,\r\n    })\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: FoundryDocument) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function flagPath(key: string) {\r\n    return `flags.${MODULE_ID}.key`\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: FoundryDocument, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId(doc: ClientDocumentMixin) {\r\n    return doc.getFlag<ItemUUID>('core', 'sourceId')\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocumentMixin, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocumentMixin, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\n\r\ntype ActorItemTypes<A extends Actor> = (keyof A['itemTypes'])[]\r\n\r\nfunction getItemSourceIdCondition(sourceId: ItemUUID | ItemUUID[]) {\r\n    return Array.isArray(sourceId)\r\n        ? (item: Item) => includesSourceId(item, sourceId)\r\n        : (item: Item) => getSourceId(item) === sourceId\r\n}\r\n\r\nexport function getItems(actor: Actor, itemTypes?: ActorItemTypes<Actor>) {\r\n    return (itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type as string]) : actor.items) as Embedded<Item>[]\r\n}\r\n\r\nexport function findItemWithSourceId<I extends Item>(actor: Actor, sourceId: ItemUUID, itemTypes?: ActorItemTypes<Actor>) {\r\n    return getItems(actor, itemTypes).find(getItemSourceIdCondition(sourceId)) as unknown as Embedded<I>\r\n}\r\n\r\nexport function hasItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).some(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function filterItemsWithSourceId<I extends Item>(\r\n    actor: Actor,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<Actor>\r\n) {\r\n    return getItems(actor, itemTypes).filter(getItemSourceIdCondition(sourceId)) as unknown as Embedded<I>[]\r\n}\r\n","import { chatUUID } from '@utils/foundry/uuid'\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'] as const)\r\n\r\nexport const SPELL_COMPONENTS = ['focus', 'material', 'somatic', 'verbal'] as const\r\n\r\nconst scrolls: (ConsumablePF2e | null)[] = []\r\nexport async function createSpellScroll(uuid: ItemUUID, level: OneToTen | false, temp = false) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = getScrollCompendiumUUID(level)\r\n    scrolls[level] ??= await fromUuid<ConsumablePF2e>(scrollUUID)\r\n\r\n    const scroll = scrolls[level]?.toObject()\r\n    if (!scroll) return null\r\n\r\n    spell.system.location.heightenedLevel = level\r\n\r\n    scroll.name = `Scroll of ${spell.name} (Level ${level})`\r\n    scroll.system.temporary = temp\r\n    scroll.system.spell = spell\r\n    scroll.system.traits.value.push(...spell.system.traditions.value)\r\n\r\n    const sourceId = spell.flags.core?.sourceId\r\n    if (sourceId) scroll.system.description.value = `${chatUUID(sourceId)}\\n<hr />${scroll.system.description.value}`\r\n\r\n    return scroll\r\n}\r\n\r\nfunction getScrollCompendiumUUID(level: OneToTen): ItemUUID {\r\n    return `Compendium.pf2e.equipment-srd.Item.${scrollCompendiumIds[level]}`\r\n}\r\n\r\nconst scrollCompendiumIds: Record<number, string> = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.Item.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n","const wordCharacter = String.raw`[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacter = String.raw`[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacterRE = new RegExp(nonWordCharacter, 'gu')\r\n\r\nconst wordBoundary = String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`\r\nconst nonWordBoundary = String.raw`(?:${wordCharacter})(?=${wordCharacter})`\r\nconst lowerCaseLetter = String.raw`\\p{Lowercase_Letter}`\r\nconst upperCaseLetter = String.raw`\\p{Uppercase_Letter}`\r\nconst lowerCaseThenUpperCaseRE = new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`, 'gu')\r\n\r\nconst nonWordCharacterHyphenOrSpaceRE = /[^-\\p{White_Space}\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]/gu\r\nconst upperOrWordBoundariedLowerRE = new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`, 'gu')\r\n\r\n/**\r\n * The system's sluggification algorithm for labels and other terms.\r\n * @param text The text to sluggify\r\n * @param [options.camel=null] The sluggification style to use\r\n */\r\nexport function sluggify(text: string, { camel = null }: { camel?: 'dromedary' | 'bactrian' | null } = {}): string {\r\n    // Sanity check\r\n    if (typeof text !== 'string') {\r\n        console.warn('Non-string argument passed to `sluggify`')\r\n        return ''\r\n    }\r\n\r\n    switch (camel) {\r\n        case null:\r\n            return text\r\n                .replace(lowerCaseThenUpperCaseRE, '$1-$2')\r\n                .toLowerCase()\r\n                .replace(/['’]/g, '')\r\n                .replace(nonWordCharacterRE, ' ')\r\n                .trim()\r\n                .replace(/[-\\s]+/g, '-')\r\n        case 'bactrian': {\r\n            const dromedary = sluggify(text, { camel: 'dromedary' })\r\n            return dromedary.charAt(0).toUpperCase() + dromedary.slice(1)\r\n        }\r\n        case 'dromedary':\r\n            return text\r\n                .replace(nonWordCharacterHyphenOrSpaceRE, '')\r\n                .replace(/[-_]+/g, ' ')\r\n                .replace(upperOrWordBoundariedLowerRE, (part, index) => (index === 0 ? part.toLowerCase() : part.toUpperCase()))\r\n                .replace(/\\s+/g, '')\r\n        default:\r\n            throw ErrorPF2e(\"I don't think that's a real camel.\")\r\n    }\r\n}\r\n\r\nexport function ErrorPF2e(message: string): Error {\r\n    return Error(`PF2e System | ${message}`)\r\n}\r\n\r\n/** Check if an element is present in the provided set. Especially useful for checking against literal sets */\r\nexport function setHasElement<T extends Set<unknown>>(set: T, value: unknown): value is SetElement<T> {\r\n    return set.has(value)\r\n}\r\n","import { MAGIC_TRADITIONS } from './spell'\r\nimport { setHasElement } from './utils'\r\n\r\nconst dcByLevel = new Map<number, number>()\r\ndcByLevel.set(-1, 13)\r\ndcByLevel.set(0, 14)\r\ndcByLevel.set(1, 15)\r\ndcByLevel.set(2, 16)\r\ndcByLevel.set(3, 18)\r\ndcByLevel.set(4, 19)\r\ndcByLevel.set(5, 20)\r\ndcByLevel.set(6, 22)\r\ndcByLevel.set(7, 23)\r\ndcByLevel.set(8, 24)\r\ndcByLevel.set(9, 26)\r\ndcByLevel.set(10, 27)\r\ndcByLevel.set(11, 28)\r\ndcByLevel.set(12, 30)\r\ndcByLevel.set(13, 31)\r\ndcByLevel.set(14, 32)\r\ndcByLevel.set(15, 34)\r\ndcByLevel.set(16, 35)\r\ndcByLevel.set(17, 36)\r\ndcByLevel.set(18, 38)\r\ndcByLevel.set(19, 39)\r\ndcByLevel.set(20, 40)\r\ndcByLevel.set(21, 42)\r\ndcByLevel.set(22, 44)\r\ndcByLevel.set(23, 46)\r\ndcByLevel.set(24, 48)\r\ndcByLevel.set(25, 50)\r\n\r\nconst dcAdjustments = new Map<DCAdjustment, number>()\r\ndcAdjustments.set('incredibly easy', -10)\r\ndcAdjustments.set('very easy', -5)\r\ndcAdjustments.set('easy', -2)\r\ndcAdjustments.set('normal', 0)\r\ndcAdjustments.set('hard', 2)\r\ndcAdjustments.set('very hard', 5)\r\ndcAdjustments.set('incredibly hard', 10)\r\n\r\nexport function calculateDC(level: number, { proficiencyWithoutLevel, rarity = 'common' }: DCOptions = {}): number {\r\n    const pwlSetting = game.settings.get('pf2e', 'proficiencyVariant')\r\n    proficiencyWithoutLevel ??= pwlSetting === 'ProficiencyWithoutLevel'\r\n\r\n    // assume level 0 if garbage comes in. We cast level to number because the backing data may actually have it\r\n    // stored as a string, which we can't catch at compile time\r\n    const dc = dcByLevel.get(level) ?? 14\r\n    if (proficiencyWithoutLevel) {\r\n        // -1 shouldn't be subtracted since it's just\r\n        // a creature level and not related to PC levels\r\n        return adjustDCByRarity(dc - Math.max(level, 0), rarity)\r\n    } else {\r\n        return adjustDCByRarity(dc, rarity)\r\n    }\r\n}\r\n\r\nexport function adjustDCByRarity(dc: number, rarity: Rarity = 'common'): number {\r\n    return adjustDC(dc, rarityToDCAdjustment(rarity))\r\n}\r\n\r\nexport function adjustDC(dc: number, adjustment: DCAdjustment = 'normal'): number {\r\n    return dc + (dcAdjustments.get(adjustment) ?? 0)\r\n}\r\n\r\nexport function rarityToDCAdjustment(rarity: Rarity = 'common'): PositiveDCAdjustment {\r\n    switch (rarity) {\r\n        case 'uncommon':\r\n            return 'hard'\r\n        case 'rare':\r\n            return 'very-hard'\r\n        case 'unique':\r\n            return 'incredibly-hard'\r\n        default:\r\n            return 'normal'\r\n    }\r\n}\r\nexport function getDcByLevel(actor: ActorPF2e) {\r\n    const level = Math.clamped(actor.level, -1, 25)\r\n    return dcByLevel.get(level)!\r\n}\r\n\r\nfunction getDcRarity(item: PhysicalItemPF2e): Rarity {\r\n    return item.traits.has('cursed') ? 'unique' : item.rarity\r\n}\r\n\r\nfunction getMagicTraditions(item: PhysicalItemPF2e): Set<MagicTradition> {\r\n    const traits: string[] = item.system.traits.value\r\n    return new Set(traits.filter((t): t is MagicTradition => setHasElement(MAGIC_TRADITIONS, t)))\r\n}\r\n\r\nfunction getIdentifyMagicDCs(item: PhysicalItemPF2e, baseDC: number, notMatchingTraditionModifier: number): IdentifyMagicDCs {\r\n    const result = {\r\n        occult: baseDC,\r\n        primal: baseDC,\r\n        divine: baseDC,\r\n        arcane: baseDC,\r\n    }\r\n    const traditions = getMagicTraditions(item)\r\n    for (const key of MAGIC_TRADITIONS) {\r\n        // once an item has a magic tradition, all skills\r\n        // that don't match the tradition are hard\r\n        if (traditions.size > 0 && !traditions.has(key)) {\r\n            result[key] = baseDC + notMatchingTraditionModifier\r\n        }\r\n    }\r\n    return { arcana: result.arcane, nature: result.primal, religion: result.divine, occultism: result.occult }\r\n}\r\n\r\nexport function getItemIdentificationDCs(\r\n    item: PhysicalItemPF2e,\r\n    { proficiencyWithoutLevel = false, notMatchingTraditionModifier }: IdentifyItemOptions\r\n): GenericIdentifyDCs | IdentifyMagicDCs | IdentifyAlchemyDCs {\r\n    const baseDC = calculateDC(item.level, { proficiencyWithoutLevel })\r\n    const rarity = getDcRarity(item)\r\n    const dc = adjustDCByRarity(baseDC, rarity)\r\n    if (item.isMagical) {\r\n        return getIdentifyMagicDCs(item, dc, notMatchingTraditionModifier)\r\n    } else if (item.isAlchemical) {\r\n        return { crafting: dc }\r\n    } else {\r\n        return { dc: dc }\r\n    }\r\n}\r\n","import { socketEmit } from '@utils/socket'\r\nimport { findItemWithSourceId, hasItemWithSourceId } from '@utils/foundry/item'\r\nimport { esotericCheckTitle, getEsotericSkill, hasDiverseLore } from './shared/esoteric'\r\nimport { getDcByLevel } from '@utils/pf2e/dc'\r\n\r\nconst effectUUID = 'Compendium.idleuh.effects.Item.MqgbuaqGMJ92VRze'\r\nconst targetUUID = 'Compendium.idleuh.effects.Item.Lz5hNf4dbXKjDWBa'\r\nconst mortalUUID = 'Compendium.idleuh.effects.Item.8BxBB5ztfRI9vFfZ'\r\nconst ffUUID = 'Compendium.pf2e.conditionitems.Item.AJh5ex99aV6VTggg'\r\n\r\nexport async function exploitVulnerability(event: JQuery.TriggeredEvent, actor: ActorPF2e, filterTypes: WeaknessType[]) {\r\n    if (event.ctrlKey) {\r\n        if (game.user.isGM) cleanExploitVulnerabilityGM()\r\n        else socketEmit({ type: 'clean-exploit-vulnerability' })\r\n        ui.notifications.notify('All effects are being removed.')\r\n        return\r\n    }\r\n\r\n    const targets = game.user.targets as Set<TokenPF2e>\r\n    const [target] = targets\r\n    const targetActor = target?.actor\r\n\r\n    if (\r\n        !actor ||\r\n        !actor.isOwner ||\r\n        !actor.isOfType('character') ||\r\n        targets.size !== 1 ||\r\n        !targetActor ||\r\n        !targetActor.isOfType('creature')\r\n    ) {\r\n        ui.notifications.warn('You must select a character token you own and target another one.')\r\n        return\r\n    }\r\n\r\n    const skill = getEsotericSkill(actor)\r\n    if (!skill) return\r\n\r\n    const actionSlug = 'action:recall-knowledge'\r\n    const dc = getDcByLevel(targetActor)\r\n\r\n    const options = actor.getRollOptions(['all', 'skill-check', 'Esoteric'])\r\n    options.push(actionSlug)\r\n    options.push(`secret`)\r\n\r\n    const dv = targetActor.system.attributes.weaknesses\r\n    const vulnerability = dv.reduce((prev, curr) => {\r\n        if (curr.value > prev) return curr.value\r\n        return prev\r\n    }, 0)\r\n\r\n    const weaknesses = dv.filter(x => x.value === vulnerability).map(x => x.type)\r\n\r\n    const roll = (await game.pf2e.Check.roll(\r\n        new game.pf2e.CheckModifier('test', skill),\r\n        {\r\n            actor,\r\n            target: { actor: targetActor, token: target.document },\r\n            title: esotericCheckTitle(),\r\n            type: 'skill-check',\r\n            options,\r\n            dc: { value: dc },\r\n            createMessage: false,\r\n        },\r\n        event\r\n    ))!\r\n\r\n    const result = roll.total ?? 0\r\n    const die = roll.dice[0]?.total ?? 0\r\n    const success = getSuccess(result, die, dc)\r\n\r\n    const effect = findItemWithSourceId(actor, effectUUID, ['effect'])\r\n    if (success >= 1 && !effect) {\r\n        const data = (await fromUuid<EffectPF2e>(effectUUID))!.toObject()\r\n        actor.createEmbeddedDocuments('Item', [data])\r\n    } else if (success < 1) {\r\n        effect?.delete()\r\n        const flatEffect = hasItemWithSourceId(actor, ffUUID, ['condition'])\r\n        if (!flatEffect) {\r\n            const data = (await fromUuid<ConditionPF2e>(ffUUID))!.toObject()\r\n            actor.createEmbeddedDocuments('Item', [data])\r\n        }\r\n    }\r\n\r\n    createMsg(actor, targetActor, dc, result, die, success, vulnerability, weaknesses)\r\n\r\n    const filteredWeaknesses = weaknesses.filter(x => !filterTypes.includes(x))\r\n\r\n    const packet: ExploitVulnerabilityPacket = {\r\n        type: 'exploit-vulnerability',\r\n        actorId: actor.id,\r\n        targetId: target.id,\r\n        vulnerability: filteredWeaknesses.length ? vulnerability : 0,\r\n        success,\r\n    }\r\n\r\n    if (game.user.isGM) exploitVulnerabilityGM(packet)\r\n    else socketEmit(packet)\r\n}\r\n\r\nexport async function exploitVulnerabilityGM({ actorId, targetId, vulnerability, success }: ExploitVulnerabilityPacket) {\r\n    const actor = game.actors.get<CharacterPF2e>(actorId)\r\n    const targetActor = canvas.tokens.get(targetId)?.actor as ActorPF2e | undefined | null\r\n    if (!actor || !targetActor) return\r\n\r\n    const personal = 2 + Math.floor(actor.level / 2)\r\n    const isMortal = success > 1 && vulnerability >= personal\r\n\r\n    const mortalData = (await fromUuid<EffectPF2e>(mortalUUID))!.toObject()\r\n    const rule = {\r\n        key: 'Weakness',\r\n        type: 'piercing',\r\n        value: vulnerability,\r\n        predicate: ['origin:effect:exploit-vulnerability'],\r\n    }\r\n    mortalData.system.rules.push(rule)\r\n\r\n    for (const token of canvas.tokens.placeables) {\r\n        const tokenActor = token.actor as ActorPF2e\r\n        if (!tokenActor || tokenActor === actor) continue\r\n\r\n        const targetEffect = findItemWithSourceId(tokenActor, targetUUID, ['effect'])\r\n        const mortalsEffect = findItemWithSourceId(tokenActor, mortalUUID, ['effect'])\r\n\r\n        await targetEffect?.delete()\r\n        await mortalsEffect?.delete()\r\n\r\n        if (success < 1) continue\r\n\r\n        if (tokenActor === targetActor) {\r\n            const data = (await fromUuid<EffectPF2e>(targetUUID))!.toObject()\r\n            const rule = {\r\n                key: 'Weakness',\r\n                type: 'piercing',\r\n                value: isMortal ? vulnerability : personal,\r\n                predicate: ['origin:effect:exploit-vulnerability'],\r\n            }\r\n            data.system.rules.push(rule)\r\n            tokenActor.createEmbeddedDocuments('Item', [data])\r\n        } else if (isMortal && tokenActor.id === targetActor.id) {\r\n            tokenActor.createEmbeddedDocuments('Item', [mortalData])\r\n        }\r\n    }\r\n}\r\n\r\nexport function cleanExploitVulnerabilityGM() {\r\n    for (const token of canvas.tokens.placeables) {\r\n        const tokenActor = token.actor as ActorPF2e\r\n        if (!tokenActor) continue\r\n\r\n        const effect = findItemWithSourceId(tokenActor, effectUUID, ['effect'])\r\n        const targetEffect = findItemWithSourceId(tokenActor, targetUUID, ['effect'])\r\n        const mortalsEffect = findItemWithSourceId(tokenActor, mortalUUID, ['effect'])\r\n\r\n        effect?.delete()\r\n        targetEffect?.delete()\r\n        mortalsEffect?.delete()\r\n    }\r\n}\r\n\r\nfunction getSuccess(total: number, die: number, dc: number) {\r\n    let success = total >= dc + 10 ? 3 : total >= dc ? 2 : total > dc - 10 ? 1 : 0\r\n    if (die === 20) success++\r\n    else if (die === 1) success--\r\n    return success\r\n}\r\n\r\nfunction createMsg(\r\n    actor: Actor,\r\n    target: ActorPF2e,\r\n    dc: number,\r\n    result: number,\r\n    die: number,\r\n    success: number,\r\n    vulnerability: number,\r\n    weaknesses: string[]\r\n) {\r\n    const by = result - dc\r\n    const mod = result - die\r\n    const css = success >= 3 ? 'criticalSuccess' : success === 2 ? 'success' : success === 1 ? 'failure' : 'criticalFailure'\r\n    const txt = success >= 3 ? 'Critical Success' : success === 2 ? 'Success' : success === 1 ? 'Failure' : 'Critical Failure'\r\n\r\n    let flavor = `<h4 class=\"action\"><span class=\"pf2-icon\">A</span> <b>Exploit Vulnerability</b> <p class=\"compact-text\">(Esoteric Check)</p></h4>\r\n<div class=\"target-dc-result\" data-visibility=\"gm\">\r\n    <div class=\"target-dc\" data-visibility=\"gm\"><span data-visibility=\"gm\" data-whose=\"target\">\r\n        Target: ${target.name}</span> <span data-visibility=\"gm\" data-whose=\"target\">(Standard DC ${dc})</span></div>\r\n    <div class=\"result degree-of-success\" data-visibility=\"gm\">\r\n        Result: <span title=\"Roll: ${die} ${mod >= 0 ? '+' : '-'} ${Math.abs(mod)}\">${result}</span> \r\n        <span data-whose=\"self\" class=\"${css}\">${txt}</span> <span data-whose=\"target\">by ${by >= 0 ? '+' : ''}${by}</span>\r\n    </div>\r\n</div>`\r\n\r\n    if (success >= 2 && weaknesses.length) {\r\n        flavor += `<div><strong>[ ${weaknesses.join(', ')} ]</strong> = ${vulnerability}</div>`\r\n    }\r\n\r\n    flavor += '<section class=\"roll-note\">'\r\n    if (success >= 3) {\r\n        flavor += `<strong>Critical Success</strong> You remember the creature's weaknesses, and as you empower your esoterica, \r\nyou have a flash of insight that grants even more knowledge about the creature. \r\nYou learn all of the creature's resistances, weaknesses, and immunities, \r\nincluding the amounts of the resistances and weaknesses and any unusual weaknesses or vulnerabilities, \r\nsuch as what spells will pass through a golem's antimagic. \r\nYou can exploit either the creature's mortal weakness or personal antithesis (see the Exploit Vulnerability class feature). \r\nYour unarmed and weapon Strikes against the creature also become magical if they weren't already.`\r\n    } else if (success === 2) {\r\n        flavor += `<strong>Success</strong> You recall an important fact about the creature, \r\nlearning its highest weakness (or one of its highest weaknesses, if it has multiple with the same value) but not its other weaknesses, \r\nresistances, or immunities. You can exploit either the creature's mortal weakness or personal antithesis. \r\nYour unarmed and weapon Strikes against the creature also become magical if they weren't already.`\r\n    } else if (success === 1) {\r\n        flavor += `<strong>Failure</strong> Failing to recall a salient weakness about the creature, \r\nyou instead attempt to exploit a more personal vulnerability. \r\nYou can exploit only the creature's personal antithesis. \r\nYour unarmed and weapon Strikes against the creature also become magical if they weren't already.`\r\n    } else {\r\n        flavor += `<strong>Critical Failure</strong> You couldn't remember the right object to use and become distracted while you rummage \r\nthrough your esoterica. You become flat-footed until the beginning of your next turn.`\r\n    }\r\n    flavor += '</section>'\r\n\r\n    if (hasDiverseLore(actor) && success >= 2) flavor += getDiverseLoreMsg(target, result, die)\r\n\r\n    ChatMessage.create({ flavor, speaker: ChatMessage.getSpeaker({ actor }) })\r\n}\r\n\r\nfunction getDiverseLoreMsg(target: ActorPF2e, result: number, die: number) {\r\n    const progression = (target as NPCPF2e).identificationDCs?.standard.progression\r\n    const knowledges = progression.map(dc => {\r\n        const success = getSuccess(result, die, dc)\r\n        const color = success >= 3 ? 'green' : success === 2 ? 'blue' : '#ff4500'\r\n        const title = success >= 3 ? 'Critical Success' : success === 2 ? 'Success' : 'Failure'\r\n        return `<span style=\"color: ${color};\" title=\"${title}\">${dc}</span>`\r\n    })\r\n    const dcs = knowledges.length ? ` <span data-visibility=\"gm\">${knowledges.join(', ')}</span>` : ''\r\n\r\n    return `<section class=\"roll-note\">\r\n    <strong>Diverse Lore</strong> Compare the result of your Esoteric Lore check to the DC${dcs} to Recall Knowledge for that creature; \r\n    if that number would be a success or a critical success, you gain information as if you had succeeded at the Recall Knowledge check.\r\n</section>`\r\n}\r\n","import { MODULE_ID, TYPE } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `${TYPE}s/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `${TYPE}s/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","import { templatePath } from '@utils/foundry/path'\r\nimport { identifyItem } from '@utils/pf2e/item'\r\nimport { SKILL_ABBREVIATIONS, SKILL_DICTIONARY } from '@utils/pf2e/skills'\r\nimport { getItemIdentificationDCs } from '@utils/pf2e/dc'\r\n\r\nexport class Identify extends Application {\r\n    items: PhysicalItemPF2e[]\r\n\r\n    constructor(items: PhysicalItemPF2e[], options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this.items = items\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'idleuh-identify',\r\n            title: 'Identify Items',\r\n            template: templatePath('identify.html'),\r\n            width: 500,\r\n        })\r\n    }\r\n\r\n    getData(options?: Partial<ApplicationOptions> | undefined) {\r\n        return mergeObject(super.getData(options), {\r\n            items: this.items.map(item => {\r\n                const data = item.system.identification.identified\r\n                const identified = item.isIdentified\r\n                const checked = !identified && (item.getFlag('world', 'identify.checked') as boolean)\r\n\r\n                const classes = [] as string[]\r\n                if (identified) classes.push('identified')\r\n                if (checked) classes.push('checked')\r\n\r\n                return {\r\n                    uuid: item.uuid,\r\n                    img: data.img,\r\n                    name: item.isOfType('treasure') ? `($) ${data.name}` : data.name,\r\n                    css: classes.join(' '),\r\n                    identified,\r\n                    checked,\r\n                }\r\n            }),\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>) {\r\n        // super.activateListeners(html)\r\n\r\n        html.find('[data-action=\"chat\"]').on('click', this.#onChat.bind(this))\r\n        html.find('[data-action=\"checks\"]').on('click', this.#onChecks.bind(this))\r\n        html.find('[data-action=\"identify\"]').on('click', this.#onIdentify.bind(this))\r\n        html.find('[data-action=\"remove\"]').on('click', this.#onRemove.bind(this))\r\n        html.find('[data-action=\"reset\"]').on('click', this.#onReset.bind(this))\r\n    }\r\n\r\n    async #onChat(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        item?.toMessage(undefined, { create: true })\r\n    }\r\n\r\n    async #onChecks(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        if (!item) return\r\n\r\n        const itemImg = item.system.identification.unidentified.img\r\n        const itemName = item.system.identification.unidentified.name\r\n        const identifiedName = item.system.identification.identified.name\r\n\r\n        const notMatchingTraditionModifier = game.settings.get('pf2e', 'identifyMagicNotMatchingTraditionModifier')\r\n        const proficiencyWithoutLevel = game.settings.get('pf2e', 'proficiencyVariant') === 'ProficiencyWithoutLevel'\r\n        const dcs = getItemIdentificationDCs(item, { proficiencyWithoutLevel, notMatchingTraditionModifier })\r\n\r\n        const skills = Object.entries(dcs).map(([slug, dc]) => {\r\n            slug = slug === 'dc' ? 'crafting' : slug\r\n            const name = game.i18n.localize(CONFIG.PF2E.skillList[slug])\r\n            return { slug, name, dc }\r\n        })\r\n\r\n        const actionOption = item.isMagical ? 'action:identify-magic' : item.isAlchemical ? 'action:identify-alchemy' : null\r\n\r\n        const content = await renderTemplate('systems/pf2e/templates/actors/identify-item-chat-skill-checks.hbs', {\r\n            itemImg,\r\n            itemName,\r\n            identifiedName,\r\n            rollOptions: ['concentrate', 'exploration', 'secret', actionOption].filter(Boolean),\r\n            skills,\r\n        })\r\n\r\n        await CONFIG.ChatMessage.documentClass.create({ user: game.user.id, content })\r\n    }\r\n\r\n    async #onIdentify(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        if (!item) return\r\n        await item.setIdentificationStatus(item.isIdentified ? 'unidentified' : 'identified')\r\n        this.render()\r\n    }\r\n\r\n    async #onRemove(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        if (!item) return\r\n\r\n        const checked = item.getFlag('world', 'identify.checked')\r\n        await item.setFlag('world', 'identify.checked', !checked)\r\n\r\n        this.render()\r\n    }\r\n\r\n    async #onReset(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        for (const item of this.items) {\r\n            if (item.isIdentified || !item.getFlag('world', 'identify.checked')) continue\r\n            await item.setFlag('world', 'identify.checked', false)\r\n        }\r\n\r\n        this.render()\r\n    }\r\n}\r\n\r\nasync function getItemFromEvent(event: JQuery.TriggeredEvent<any, any, HTMLElement>) {\r\n    const parent = $(event.currentTarget).closest('[data-item]')\r\n    const uuid = parent.attr('data-item') as string\r\n    const item = await fromUuid(uuid)\r\n    if (!item) parent.remove()\r\n    return item as PhysicalItemPF2e | null\r\n}\r\n","import { Identify } from '@apps/identify'\r\n\r\nexport function identify() {\r\n    if (!game.user.isGM) {\r\n        ui.notifications.warn('You not the GM yo!')\r\n        return\r\n    }\r\n\r\n    const actors = game.actors\r\n    const items = actors.reduce((acc, actor) => {\r\n        if (!actor.hasPlayerOwner) return acc\r\n        const filtered = actor.items.filter(item => item.isOfType('physical') && !item.isIdentified) as PhysicalItemPF2e[]\r\n        acc.push(...filtered)\r\n        return acc\r\n    }, [] as PhysicalItemPF2e[])\r\n\r\n    new Identify(items).render(true)\r\n}\r\n","import { createSpellScroll } from '@utils/pf2e/spell'\r\n\r\nconst packId = 'pf2e.spells-srd'\r\nconst bookId = 'Item.dcALVAyJbYSovzqt'\r\n\r\nexport async function ripImaginarium(actor: ActorPF2e) {\r\n    if (!actor) return ui.notifications.warn('You must select an actor with the Imaginarium')\r\n\r\n    const book = actor.itemTypes.equipment.find(x => x.getFlag('core', 'sourceId') === bookId)\r\n    if (!book || book.system.equipped.carryType === 'dropped')\r\n        return ui.notifications.warn(\"This actor doesn't have the Imaginarium in their possession\")\r\n\r\n    const level = Math.floor(actor.level / 2) as OneToTen\r\n    const pack = game.packs.get(packId)!\r\n    const index = await pack.getIndex({ fields: ['system.level.value', 'system.traits', 'system.category.value'] })\r\n\r\n    const spells = index.filter(\r\n        x =>\r\n            x.system.level.value <= level &&\r\n            !x.system.traits.value.includes('cantrip') &&\r\n            x.system.category.value !== 'ritual' &&\r\n            x.system.category.value !== 'focus' &&\r\n            x.system.traits.rarity === 'common'\r\n    )\r\n\r\n    const roll = Math.floor(Math.random() * spells.length)\r\n    const spell = spells[roll]\r\n    const uuid = `Compendium.${packId}.${spell._id}` as ItemUUID\r\n\r\n    let messageUUID = uuid\r\n    let extraMessage = ''\r\n    const scroll = await createSpellScroll(uuid, level)\r\n    if (scroll) {\r\n        scroll.name = scroll.name + ' *'\r\n        const [item] = (await actor.createEmbeddedDocuments('Item', [scroll])) as ItemPF2e[]\r\n        extraMessage = ' and received the following:'\r\n        messageUUID = item.uuid\r\n    }\r\n\r\n    ChatMessage.create({\r\n        content: `<p>Ripped the last page of the Imaginarium${extraMessage}</p><p>@UUID[${messageUUID}]</p>`,\r\n        speaker: ChatMessage.getSpeaker({ actor: actor as Actor }),\r\n    })\r\n}\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n\r\nconst RESULT_TEXT_REGEX = /@UUID\\[([\\w\\.]+)\\]/\r\nexport function documentUuidFromTableResult(result: TableResult) {\r\n    if (result.type === CONST.TABLE_RESULT_TYPES.TEXT) return RESULT_TEXT_REGEX.exec(result.text)?.[1]\r\n    if (result.type === CONST.TABLE_RESULT_TYPES.DOCUMENT) return `${result.documentCollection}.${result.documentId}`\r\n    if (result.type === CONST.TABLE_RESULT_TYPES.COMPENDIUM) return `Compendium.${result.documentCollection}.${result.documentId}`\r\n    return undefined\r\n}\r\n","import { templatePath } from '@utils/foundry/path'\r\n\r\nexport class ManualToken extends FormApplication<TokenDocumentPF2e> {\r\n    static get defaultOptions(): FormApplicationOptions {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'idleuh-manual-token',\r\n            template: templatePath('manual-token.html'),\r\n            title: 'Manual Token Update',\r\n            width: 500,\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find('button[type=button]').on('click', () => this.close())\r\n\r\n        const scale = html.find('input[name=scale]') as JQuery<HTMLInputElement>\r\n        const scaleValue = scale.next('span')\r\n        scale.on('input', () => {\r\n            const val = scale[0].valueAsNumber\r\n            scaleValue.text(val.toFixed(2))\r\n        })\r\n\r\n        const grid = html.find('input[name=grid]') as JQuery<HTMLInputElement>\r\n        const gridValue = grid.next('span')\r\n        grid.on('input', () => {\r\n            const val = grid[0].valueAsNumber\r\n            gridValue.text(val.toFixed(1))\r\n        })\r\n    }\r\n\r\n    protected async _updateObject(event: Event, formData: Record<string, unknown>) {\r\n        const data = this.object\r\n\r\n        const newData = {\r\n            ['displayName']: Number(formData.name),\r\n            ['displayBars']: Number(formData.hp),\r\n            ['texture.src']: formData.img,\r\n            ['flags.pf2e.linkToActorSize']: !!formData.link,\r\n            ['width']: Number(formData.grid),\r\n            ['height']: Number(formData.grid),\r\n            ['texture.scaleX']: Number(formData.scale),\r\n            ['texture.scaleY']: Number(formData.scale),\r\n        }\r\n\r\n        const update = {}\r\n        for (const [k, v] of Object.entries(newData)) {\r\n            if (getProperty(data, k) === v) continue\r\n            setProperty(update, k, v)\r\n        }\r\n\r\n        if (Object.keys(update).length) this.object.update(update)\r\n    }\r\n}\r\n","import { ManualToken } from '@apps/manual-token'\r\n\r\nexport async function manualToken(token: TokenPF2e) {\r\n    if (!token || !token.isOwner) {\r\n        ui.notifications.warn('You need to select an owned token.')\r\n        return\r\n    }\r\n    new ManualToken(token.document).render(true)\r\n}\r\n","const proficiency = ['trained', 'expert', 'master', 'legendary', 'untrained']\r\n\r\nexport async function groupPerception() {\r\n    if (!game.user.isGM) {\r\n        ui.notifications.warn('You not the GM yo!')\r\n        return\r\n    }\r\n\r\n    let result = '<hr>'\r\n\r\n    const tokens = canvas.tokens\r\n    for (const token of tokens.placeables) {\r\n        const actor = token.actor\r\n        if (!actor || !actor.isOfType('character', 'npc') || !actor.hasPlayerOwner || !actor.attributes.perception) continue\r\n        result += await rollPerception(actor)\r\n    }\r\n\r\n    ChatMessage.create({ content: result, flavor: 'Group Perception Checks', whisper: [game.user.id] })\r\n}\r\n\r\nasync function rollPerception(actor: CharacterPF2e | NPCPF2e) {\r\n    const perception = actor.attributes.perception\r\n    const check = new game.pf2e.CheckModifier('', perception)\r\n    const roll = await game.pf2e.Check.roll(check, { actor: actor, type: 'skill-check', createMessage: false, skipDialog: true })\r\n    if (!roll) return ''\r\n\r\n    const rank = proficiency[(perception.rank ?? 1) - 1]\r\n    const die = roll.dice[0].total\r\n    if (die === undefined) return ''\r\n\r\n    let result = `<div style=\"display:flex;justify-content:space-between;\" title=\"${roll.result}\">`\r\n    result += `<span>${actor.name} (${rank})</span><span`\r\n    if (die == 20) result += ' style=\"color: green;\"'\r\n    else if (die == 1) result += ' style=\"color: red;\"'\r\n\r\n    return `${result}>${roll.total}</span></div>`\r\n}\r\n","import { findItemWithSourceId } from '@utils/foundry/item'\r\nimport { getDcByLevel } from '@utils/pf2e/dc'\r\n\r\nconst effectUUID = 'Compendium.idleuh.effects.Item.jjFsfolNR04KzPVh'\r\nconst featUUID = 'Compendium.idleuh.feats.Item.X3SZ0gTpBkGw3UGX'\r\nconst debuffUUID = 'Compendium.idleuh.effects.Item.r0hicuQPY0OEAC6g'\r\n\r\nexport async function marshalInspiration(event: JQuery.TriggeredEvent, actor: ActorPF2e) {\r\n    if (!actor || !actor.isOwner || !actor.isOfType('character')) {\r\n        ui.notifications.warn('You must select a character token you own.')\r\n        return\r\n    }\r\n\r\n    if (!findItemWithSourceId(actor as Actor, featUUID, ['feat'])) {\r\n        ui.notifications.warn(\"This character doesn't have <strong>Inspiring Marshal Stance</strong> feat.\")\r\n        return\r\n    }\r\n\r\n    if (findItemWithSourceId(actor as Actor, debuffUUID, ['effect'])) {\r\n        ui.notifications.warn('This character cannot enter <strong>Inspiring Marshal Stance</strong>.')\r\n        return\r\n    }\r\n\r\n    const dc = getDcByLevel(actor)\r\n    const roll = (await actor.skills.diplomacy.roll({ createMessage: false }))!\r\n    const result = roll.total\r\n    const die = roll.dice[0]!.total!\r\n    const success = getSuccess(result, die, dc)\r\n\r\n    if (success >= 2) {\r\n        await setEffect(actor, success)\r\n    } else {\r\n        await (await getEffect(actor))?.delete()\r\n        if (success === 0) await setDebuff(actor)\r\n    }\r\n\r\n    createMsg(actor as Actor, success, result, die, dc)\r\n}\r\n\r\nfunction createMsg(actor: Actor, success: number, result: number, die: number, dc: number) {\r\n    const by = result - dc\r\n    const mod = result - die\r\n    const css = success >= 3 ? 'criticalSuccess' : success === 2 ? 'success' : success === 1 ? 'failure' : 'criticalFailure'\r\n    const txt = success >= 3 ? 'Critical Success' : success === 2 ? 'Success' : success === 1 ? 'Failure' : 'Critical Failure'\r\n\r\n    let flavor = `<h4 class=\"action\"><span class=\"pf2-icon\">A</span> <b>Marshal Inspiration</b> <p class=\"compact-text\">(Diplomacy Check)</p></h4>\r\n    <div class=\"target-dc-result\">\r\n        <div class=\"target-dc\"><span data-whose=\"target\">Standard DC ${dc}</span></div>\r\n        <div class=\"result degree-of-success\">\r\n            Result: <span title=\"Roll: ${die} ${mod >= 0 ? '+' : '-'} ${Math.abs(mod)}\">${result}</span> \r\n            <span data-whose=\"self\" class=\"${css}\">${txt}</span> <span data-whose=\"target\">by ${by >= 0 ? '+' : ''}${by}</span>\r\n        </div>\r\n    </div>`\r\n\r\n    flavor += '<section class=\"roll-note\">'\r\n\r\n    if (success === 3) {\r\n        flavor += `<strong>Critical Success</strong> Your marshal's aura increases to a 20ft. emanation and \r\ngrants you and allies a +1 status bonus to attack rolls and saves against mental effects.`\r\n    } else if (success === 2) {\r\n        flavor += `<strong>Success</strong> Your marshal's aura grants you and allies a +1 status bonus to \r\nattack rolls and saves against mental effects.`\r\n    } else if (success === 1) {\r\n        flavor += `<strong>Failure</strong> You fail to enter the stance.`\r\n    } else {\r\n        flavor += `<strong>Critical Failure</strong> You fail to enter the stance and can't take this action again for 1 minute.`\r\n    }\r\n\r\n    flavor += '</section>'\r\n\r\n    ChatMessage.create({ flavor, speaker: ChatMessage.getSpeaker({ actor }) })\r\n}\r\n\r\nfunction getSuccess(result: number, die: number, dc: number) {\r\n    let success = result >= dc + 10 ? 3 : result >= dc ? 2 : result > dc - 10 ? 1 : 0\r\n    if (die === 20) success++\r\n    else if (die === 1) success--\r\n    return Math.clamped(success, 0, 3)\r\n}\r\n\r\nasync function setDebuff(actor: CharacterPF2e) {\r\n    const effect = await fromUuid<EffectPF2e>(debuffUUID)\r\n    if (!effect) return\r\n    await actor.createEmbeddedDocuments('Item', [effect.toObject()])\r\n}\r\n\r\nasync function setEffect(actor: CharacterPF2e, success: number) {\r\n    const radius = success === 3 ? 20 : 10\r\n    const existing = await getEffect(actor)\r\n\r\n    if (existing) {\r\n        const rules = deepClone(existing._source.system.rules)\r\n        const rule = rules.find(rule => rule.key === 'ChoiceSet') as ChoiceSetSource\r\n        if (rule.selection === radius) return\r\n\r\n        rule.selection = radius\r\n        existing.update({ 'system.rules': rules })\r\n        return\r\n    }\r\n\r\n    const effect = await fromUuid<EffectPF2e>(effectUUID)\r\n    if (!effect) return\r\n\r\n    const source = effect.toObject()\r\n    const rule = source.system.rules.find(rule => rule.key === 'ChoiceSet') as ChoiceSetRuleElement\r\n\r\n    rule.selection = radius\r\n    await actor.createEmbeddedDocuments('Item', [source])\r\n}\r\n\r\nasync function getEffect(actor: CharacterPF2e) {\r\n    return findItemWithSourceId(actor as Actor, effectUUID, ['effect']) as EffectPF2e | undefined\r\n}\r\n","import { getCurrentModule } from '@utils/foundry/module'\r\nimport { setModuleID } from '@utils/module'\r\nimport { socketOn } from '@utils/socket'\r\nimport { getSetting } from '@utils/foundry/settings'\r\nimport { esotericCheck } from './macros/esoteric'\r\nimport { cleanExploitVulnerabilityGM, exploitVulnerability, exploitVulnerabilityGM } from './macros/exploit-vulnerability'\r\nimport { identify } from './macros/identify'\r\nimport { ripImaginarium } from './macros/imaginarium'\r\nimport { manualToken } from './macros/manual-token'\r\nimport { groupPerception } from './macros/perception'\r\nimport { marshalInspiration } from './macros/inspiring-marshal'\r\n\r\nconst MODULE_ID = 'idleuh'\r\nsetModuleID(MODULE_ID)\r\n\r\nHooks.once('init', () => {\r\n    getCurrentModule<IdleuhApi>().api = {\r\n        macros: {\r\n            exploitVulnerability,\r\n            esotericCheck,\r\n            manualToken,\r\n            groupPerception,\r\n            identify,\r\n            ripImaginarium,\r\n            marshalInspiration,\r\n        },\r\n    }\r\n\r\n    game.settings.register(MODULE_ID, 'jquery', {\r\n        name: 'Disable JQuery Animations',\r\n        hint: 'Will cancel sliding animations on different parts of the UI.',\r\n        type: Boolean,\r\n        default: false,\r\n        config: true,\r\n        scope: 'client',\r\n        onChange: setJQueryFx,\r\n    })\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    if (game.user.isGM) {\r\n        socketOn(onPacketReceived)\r\n    }\r\n\r\n    if (getSetting('jquery')) setJQueryFx(true)\r\n})\r\n\r\nfunction setJQueryFx(disabled: boolean) {\r\n    jQuery.fx.off = disabled\r\n}\r\n\r\nfunction onPacketReceived(packet: ModulePacket) {\r\n    if (packet.type === 'exploit-vulnerability') exploitVulnerabilityGM(packet)\r\n    else if (packet.type === 'clean-exploit-vulnerability') cleanExploitVulnerabilityGM()\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\ntype OwnModule = 'anonymous' | 'idleuh' | 'pf2e-hero-actions' | 'pf2e-dailies'\r\n\r\ntype ReturnedModule<TApi extends ModuleApi = ModuleApi> = Module<TApi> | undefined\r\ntype ReturnedModuleApi<TApi extends Record<string, any>> = Module<TApi>['api'] | undefined\r\n\r\nexport function getModule<T extends ModuleApi = ModuleApi>(id: string | OwnModule) {\r\n    return game.modules.get(id) as ReturnedModule<T>\r\n}\r\n\r\nexport function getCurrentModule<TApi extends ModuleApi = ModuleApi>() {\r\n    return getModule(MODULE_ID) as Module<TApi>\r\n}\r\n\r\nexport function getModuleApi<TApi extends Record<string, any>>(id: string | OwnModule) {\r\n    return getModule<TApi>(id)?.api as ReturnedModuleApi<TApi>\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { getSettingLocalizationPath } from '@utils/foundry/path'\r\n\r\nexport function getSetting<T extends any>(key: string) {\r\n    return game.settings.get(MODULE_ID, key) as T\r\n}\r\n\r\nexport function setSetting(key: string, value: unknown) {\r\n    return game.settings.set(MODULE_ID, key, value)\r\n}\r\n\r\n/**\r\n * options.scope = 'world'\r\n *\r\n * options.config = false\r\n */\r\nexport function registerSetting<TChoices extends Record<string, unknown> | undefined>(\r\n    options: Omit<SettingRegistration<TChoices>, 'choices'> & { choices?: string[] | Record<string, unknown>; name: string }\r\n) {\r\n    const name = options.name\r\n    options.scope = options.scope ?? 'world'\r\n    options.config = options.config ?? false\r\n    if (options.config) {\r\n        options.name = getSettingLocalizationPath(name, 'name')\r\n        options.hint = getSettingLocalizationPath(name, 'hint')\r\n    }\r\n    if (Array.isArray(options.choices)) {\r\n        options.choices = options.choices.reduce((choices, choice) => {\r\n            choices[choice] = getSettingLocalizationPath(name, 'choices', choice)\r\n            return choices\r\n        }, {} as Record<string, unknown>)\r\n    }\r\n    game.settings.register<TChoices>(MODULE_ID, name, options as SettingRegistration<TChoices>)\r\n}\r\n\r\n/**\r\n * options.restricted = true\r\n *\r\n * options.icon = 'fas fa-cogs'\r\n */\r\nexport function registerSettingMenu(\r\n    options: RequiredBy<Partial<Omit<SettingSubmenuConfig, 'type'>>, 'name'> & { type: ConstructorOf<FormApplication> }\r\n) {\r\n    const name = options.name\r\n    options.name = getSettingLocalizationPath('menus', name, 'name')\r\n    options.label = getSettingLocalizationPath('menus', name, 'label')\r\n    options.hint = getSettingLocalizationPath('menus', name, 'hint')\r\n    options.restricted = options.restricted ?? true\r\n    options.icon = options.icon ?? 'fas fa-cogs'\r\n    game.settings.registerMenu(MODULE_ID, name, options as SettingSubmenuConfig)\r\n}\r\n\r\nexport function getCombatTrackerConfig() {\r\n    return game.settings.get('core', 'combatTrackerConfig') as { resource: string; skipDefeated: boolean }\r\n}\r\n"],"names":["socketEmit","packet","game","socket","emit","diverseUUID","getEsotericSkill","actor","skillKeys","skill","Object","values","skills","find","x","includes","slug","ui","notifications","warn","esotericCheckTitle","i18n","format","skillName","hasDiverseLore","itemTypes","feat","some","getFlag","esotericCheck","event","isOwner","isOfType","options","Set","title","flavor","ctrlKey","add","pf2e","Check","roll","CheckModifier","type","rollMode","getSourceId","doc","getItemSourceIdCondition","sourceId","Array","isArray","item","list","includesSourceId","getItems","flatMap","items","findItemWithSourceId","MAGIC_TRADITIONS","scrolls","scrollCompendiumIds","wordCharacter","String","raw","nonWordCharacter","wordBoundary","RegExp","nonWordBoundary","lowerCaseLetter","upperCaseLetter","dcByLevel","Map","set","dcAdjustments","adjustDCByRarity","dc","rarity","adjustment","get","adjustDC","rarityToDCAdjustment","getDcByLevel","level","Math","clamped","getItemIdentificationDCs","proficiencyWithoutLevel","notMatchingTraditionModifier","baseDC","pwlSetting","settings","max","calculateDC","traits","has","getDcRarity","isMagical","result","occult","primal","divine","arcane","traditions","system","value","filter","t","setHasElement","getMagicTraditions","key","size","arcana","nature","religion","occultism","getIdentifyMagicDCs","isAlchemical","crafting","effectUUID","targetUUID","mortalUUID","ffUUID","async","exploitVulnerability","filterTypes","user","isGM","cleanExploitVulnerabilityGM","notify","targets","target","targetActor","getRollOptions","push","dv","attributes","weaknesses","vulnerability","reduce","prev","curr","map","token","document","createMessage","total","die","dice","success","getSuccess","effect","data","fromUuid","toObject","createEmbeddedDocuments","delete","flatEffect","hasItemWithSourceId","by","mod","css","txt","name","abs","length","join","progression","identificationDCs","standard","knowledges","getDiverseLoreMsg","ChatMessage","create","speaker","getSpeaker","createMsg","filteredWeaknesses","actorId","id","targetId","exploitVulnerabilityGM","actors","canvas","tokens","personal","floor","isMortal","mortalData","rule","predicate","rules","placeables","tokenActor","targetEffect","mortalsEffect","templatePath","path","Identify","Application","constructor","super","this","defaultOptions","mergeObject","template","width","getData","identification","identified","isIdentified","checked","classes","uuid","img","activateListeners","html","on","bind","getItemFromEvent","toMessage","undefined","itemImg","unidentified","itemName","identifiedName","dcs","entries","localize","CONFIG","PF2E","skillList","actionOption","content","renderTemplate","rollOptions","Boolean","documentClass","setIdentificationStatus","render","setFlag","preventDefault","parent","$","currentTarget","closest","attr","remove","identify","acc","hasPlayerOwner","filtered","packId","bookId","ripImaginarium","book","equipment","equipped","carryType","pack","packs","spells","getIndex","fields","category","spell","random","_id","messageUUID","extraMessage","scroll","temp","scrollUUID","getScrollCompendiumUUID","location","heightenedLevel","temporary","flags","core","description","chatUUID","createSpellScroll","ManualToken","FormApplication","close","scale","scaleValue","next","val","valueAsNumber","text","toFixed","grid","gridValue","formData","object","newData","Number","hp","link","update","k","v","getProperty","setProperty","keys","manualToken","proficiency","groupPerception","perception","rollPerception","whisper","check","skipDialog","rank","featUUID","debuffUUID","marshalInspiration","diplomacy","radius","existing","getEffect","deepClone","_source","selection","source","setEffect","setDebuff","setJQueryFx","disabled","jQuery","fx","off","onPacketReceived","isSystem","setModuleID","Hooks","once","modules","api","macros","register","hint","default","config","scope","onChange","callback"],"sourceRoot":""}