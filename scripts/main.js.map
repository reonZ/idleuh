{
  "version": 3,
  "sources": ["../src/macros/shared/esoteric.js", "../src/macros/esoteric.js", "../src/module.js", "../src/macros/extract.js", "../src/pf2e.js", "../src/apps/identify.js", "../src/macros/identify.js", "../src/macros/imaginarium.js", "../src/macros/marshal.js", "../src/macros/perception.js", "../src/macros/snatcher.js", "../src/macros/vulnerability.js", "../src/main.js"],
  "sourcesContent": ["export function getEsotericSkill(actor) {\r\n    const skillKeys = ['esoteric', 'esoteric-lore', 'lore-esoteric']\r\n    const skill = Object.values(actor.skills).find(x => skillKeys.includes(x.slug))\r\n\r\n    if (!skill) ui.notifications.warn(`This character doesn't have the 'Esoteric' skill`)\r\n    return skill\r\n}\r\n", "import { getEsotericSkill } from './shared/esoteric'\r\n\r\nexport function esotericCheck(event, actor) {\r\n    if (!actor || !actor.isOwner || !actor.isOfType('character')) {\r\n        ui.notifications.warn('You must select a character token you own.')\r\n        return\r\n    }\r\n\r\n    const skill = getEsotericSkill(actor)\r\n    if (!skill) return\r\n\r\n    const extraRollOptions = new Set()\r\n\r\n    const extraRollNotes = [\r\n        {\r\n            text: `Can be used to Recall Knowledge regarding haunts, curses \r\n    and creatures of any type, but can't be used to Recall Knowledge of other topics.`,\r\n        },\r\n    ]\r\n\r\n    skill.roll({\r\n        rollMode: 'blindroll',\r\n        extraRollNotes,\r\n        options: extraRollOptions,\r\n    })\r\n}\r\n", "export const MODULE_ID = 'idleuh'\r\n\r\nexport function getSetting(key) {\r\n    return game.settings.get(MODULE_ID, key)\r\n}\r\n\r\nexport function socketOn(callback) {\r\n    game.socket.on(`module.${MODULE_ID}`, callback)\r\n}\r\n\r\nexport function socketEmit(packet) {\r\n    game.socket.emit(`module.${MODULE_ID}`, packet)\r\n}\r\n\r\nexport function templatePath(...path) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function chatUUID(uuid, name) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nfunction getItemSourceIdCondition(sourceId) {\r\n    return Array.isArray(sourceId) ? item => includesSourceId(item, sourceId) : item => getSourceId(item) === sourceId\r\n}\r\n\r\nexport function getItems(actor, itemTypes) {\r\n    return itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type]) : actor.items\r\n}\r\n\r\nexport function findItemWithSourceId(actor, sourceId, itemTypes) {\r\n    return getItems(actor, itemTypes).find(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function getSourceId(doc) {\r\n    return doc.getFlag('core', 'sourceId')\r\n}\r\n\r\nexport function includesSourceId(doc, list) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n\r\nexport function hasItemWithSourceId(actor, sourceId, itemTypes) {\r\n    return getItems(actor, itemTypes).some(getItemSourceIdCondition(sourceId))\r\n}\r\n", "import { findItemWithSourceId } from '../module'\r\n\r\nconst FEAT_UUID = 'Compendium.pf2e.classfeatures.Item.jyCEC3eC4B6YaGoy'\r\nconst EFFECT_UUID = 'Compendium.idleuh.effects.Item.9IapmSGjH0hDaVMv'\r\n\r\nconst PHYSICAL_TYPES = ['bludgeoning', 'slashing', 'piercing']\r\nconst TYPES = ['fire', 'earth', ...PHYSICAL_TYPES]\r\n\r\nexport async function extractElement(event, actor) {\r\n    if (!actor?.isOfType('character')) {\r\n        ui.notifications.warn('You need to select a character')\r\n        return\r\n    }\r\n\r\n    const feat = findItemWithSourceId(actor, FEAT_UUID, ['feat'])\r\n    if (!feat) {\r\n        ui.notifications.warn('Your selected character needs to have the feat <strong>Extract Element</strong>')\r\n        return\r\n    }\r\n\r\n    const targetToken = game.user.targets.first()\r\n    const targetActor = targetToken?.actor\r\n    if (!targetActor || targetActor === actor) {\r\n        ui.notifications.warn('You need to target another actor')\r\n        return\r\n    }\r\n\r\n    const existing = findItemWithSourceId(targetActor, EFFECT_UUID, ['effect'])\r\n    if (existing) {\r\n        ui.notifications.warn(\"Your target's elements have already been extracted\")\r\n        return\r\n    }\r\n\r\n    const saveRoll = await targetActor.saves.fortitude.roll({\r\n        event,\r\n        label: 'Fortitude Save - Extract Element',\r\n        dc: {\r\n            slug: 'class',\r\n            label: 'Kineticist DC',\r\n            value: actor.classDC.dc.value,\r\n        },\r\n    })\r\n\r\n    if (saveRoll.degreeOfSuccess > 2) return\r\n\r\n    const source = (await fromUuid(EFFECT_UUID))?.toObject()\r\n    const rules = source.system.rules\r\n\r\n    source.flags.core.sourceId = EFFECT_UUID\r\n\r\n    const warnings = {}\r\n\r\n    rules.push({\r\n        key: 'Immunity',\r\n        mode: 'remove',\r\n        type: TYPES.slice(),\r\n        predicate: ['origin:effect:kinetic-aura'],\r\n    })\r\n\r\n    let hasEarth = false\r\n    const resistances = targetActor.attributes.resistances.filter(({ type }) => TYPES.includes(type))\r\n    for (const { type, value, exceptions, doubleVs } of resistances) {\r\n        if (type === 'earth') {\r\n            hasEarth = {\r\n                value,\r\n                exceptions,\r\n            }\r\n        } else {\r\n            rules.push({\r\n                key: 'Weakness',\r\n                type,\r\n                value,\r\n                exceptions,\r\n                predicate: ['origin:effect:kinetic-aura'],\r\n            })\r\n        }\r\n\r\n        if (doubleVs.length) warnings.doubleVs = true\r\n    }\r\n\r\n    if (hasEarth) {\r\n        for (const type of PHYSICAL_TYPES) {\r\n            rules.push({\r\n                key: 'Weakness',\r\n                type,\r\n                value: hasEarth.value,\r\n                exceptions: hasEarth.exceptions,\r\n                predicate: ['origin:effect:kinetic-aura'],\r\n            })\r\n        }\r\n    }\r\n\r\n    targetActor.createEmbeddedDocuments('Item', [source])\r\n\r\n    const notes = []\r\n    if (warnings.doubleVs) {\r\n        notes.push(\r\n            `The creature has some resistances that are doubled versus criticals, this can't be automated and will have to be manually handled by the GM.`\r\n        )\r\n    }\r\n\r\n    const formula = `${Math.floor((actor.level - feat.level) / 2)}d4`\r\n    const DamageRoll = CONFIG.Dice.rolls.find(Roll => Roll.name === 'DamageRoll')\r\n    const damageRoll = await new DamageRoll(formula).evaluate({ async: true })\r\n\r\n    let flavor = `\r\n<h4 class=\"action\">\r\n    <strong>Extract Element</strong>\r\n    <span class=\"action-glyph\">1</span>\r\n</h4>\r\n<div class=\"target-dc-result\" data-tooltip-class=\"pf2e\" data-tooltip-direction=\"UP\">\r\n    <div class=\"target-dc\"><span data-visibility=\"all\" data-whose=\"target\">Target: ${targetActor.name}</span></div>\r\n</div>\r\n`\r\n\r\n    notes.forEach(note => (flavor += `<p>${note}</p>`))\r\n\r\n    damageRoll.toMessage({\r\n        flavor,\r\n        speaker: ChatMessage.getSpeaker({ actor: actor }),\r\n        flags: {\r\n            pf2e: {\r\n                context: {\r\n                    target: {\r\n                        token: targetToken.document.uuid,\r\n                        actor: targetActor.uuid,\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    })\r\n\r\n    console.log({ saveRoll, damageRoll, source })\r\n}\r\n", "const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'])\r\n\r\nexport function getItemIdentificationDCs(item, { proficiencyWithoutLevel = false, notMatchingTraditionModifier }) {\r\n    const baseDC = calculateDC(item.level, { proficiencyWithoutLevel })\r\n    const rarity = getDcRarity(item)\r\n    const dc = adjustDCByRarity(baseDC, rarity)\r\n    if (item.isMagical) {\r\n        return getIdentifyMagicDCs(item, dc, notMatchingTraditionModifier)\r\n    } else if (item.isAlchemical) {\r\n        return { crafting: dc }\r\n    } else {\r\n        return { dc: dc }\r\n    }\r\n}\r\n\r\nfunction setHasElement(set, value) {\r\n    return set.has(value)\r\n}\r\n\r\nfunction getMagicTraditions(item) {\r\n    const traits = item.system.traits.value\r\n    return new Set(traits.filter(t => setHasElement(MAGIC_TRADITIONS, t)))\r\n}\r\n\r\nfunction getIdentifyMagicDCs(item, baseDC, notMatchingTraditionModifier) {\r\n    const result = {\r\n        occult: baseDC,\r\n        primal: baseDC,\r\n        divine: baseDC,\r\n        arcane: baseDC,\r\n    }\r\n    const traditions = getMagicTraditions(item)\r\n    for (const key of MAGIC_TRADITIONS) {\r\n        // once an item has a magic tradition, all skills\r\n        // that don't match the tradition are hard\r\n        if (traditions.size > 0 && !traditions.has(key)) {\r\n            result[key] = baseDC + notMatchingTraditionModifier\r\n        }\r\n    }\r\n    return { arcana: result.arcane, nature: result.primal, religion: result.divine, occultism: result.occult }\r\n}\r\n\r\nfunction getDcRarity(item) {\r\n    return item.traits.has('cursed') ? 'unique' : item.rarity\r\n}\r\n\r\nconst dcByLevel = new Map([\r\n    [-1, 13],\r\n    [0, 14],\r\n    [1, 15],\r\n    [2, 16],\r\n    [3, 18],\r\n    [4, 19],\r\n    [5, 20],\r\n    [6, 22],\r\n    [7, 23],\r\n    [8, 24],\r\n    [9, 26],\r\n    [10, 27],\r\n    [11, 28],\r\n    [12, 30],\r\n    [13, 31],\r\n    [14, 32],\r\n    [15, 34],\r\n    [16, 35],\r\n    [17, 36],\r\n    [18, 38],\r\n    [19, 39],\r\n    [20, 40],\r\n    [21, 42],\r\n    [22, 44],\r\n    [23, 46],\r\n    [24, 48],\r\n    [25, 50],\r\n])\r\n\r\nconst dcAdjustments = new Map([\r\n    ['incredibly-easy', -10],\r\n    ['very-easy', -5],\r\n    ['easy', -2],\r\n    ['normal', 0],\r\n    ['hard', 2],\r\n    ['very-hard', 5],\r\n    ['incredibly-hard', 10],\r\n])\r\n\r\nfunction rarityToDCAdjustment(rarity = 'common') {\r\n    switch (rarity) {\r\n        case 'uncommon':\r\n            return 'hard'\r\n        case 'rare':\r\n            return 'very-hard'\r\n        case 'unique':\r\n            return 'incredibly-hard'\r\n        default:\r\n            return 'normal'\r\n    }\r\n}\r\n\r\nfunction adjustDC(dc, adjustment = 'normal') {\r\n    return dc + (dcAdjustments.get(adjustment) ?? 0)\r\n}\r\n\r\nfunction adjustDCByRarity(dc, rarity = 'common') {\r\n    return adjustDC(dc, rarityToDCAdjustment(rarity))\r\n}\r\n\r\nfunction calculateDC(level, { proficiencyWithoutLevel, rarity = 'common' } = {}) {\r\n    const pwlSetting = game.settings.get('pf2e', 'proficiencyVariant')\r\n    proficiencyWithoutLevel ??= pwlSetting === 'ProficiencyWithoutLevel'\r\n\r\n    // assume level 0 if garbage comes in. We cast level to number because the backing data may actually have it\r\n    // stored as a string, which we can't catch at compile time\r\n    const dc = dcByLevel.get(level) ?? 14\r\n    if (proficiencyWithoutLevel) {\r\n        // -1 shouldn't be subtracted since it's just\r\n        // a creature level and not related to PC levels\r\n        return adjustDCByRarity(dc - Math.max(level, 0), rarity)\r\n    } else {\r\n        return adjustDCByRarity(dc, rarity)\r\n    }\r\n}\r\n\r\nexport function getDcByLevel(actor) {\r\n    const level = Math.clamped(actor.level, -1, 25)\r\n    return dcByLevel.get(level)\r\n}\r\n\r\nconst scrollCompendiumIds = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.Item.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n\r\nconst scrolls = []\r\n\r\nexport async function createSpellScroll(uuid, level, temp = false) {\r\n    const spell = await fromUuid(uuid)\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = `Compendium.pf2e.equipment-srd.Item.${scrollCompendiumIds[level]}`\r\n    scrolls[level] ??= await fromUuid(scrollUUID)\r\n\r\n    const scrollSource = scrolls[level]?.toObject()\r\n    if (!scrollSource) return null\r\n\r\n    const traits = scrollSource.system.traits\r\n    traits.value = Array.from(new Set([...traits.value, ...spell.traits]))\r\n    traits.rarity = spell.rarity\r\n    if (traits.value.includes('magical') && traits.value.some(trait => MAGIC_TRADITIONS.has(trait))) {\r\n        traits.value.splice(traits.value.indexOf('magical'), 1)\r\n    }\r\n    traits.value.sort()\r\n\r\n    scrollSource._id = null\r\n    scrollSource.name = game.i18n.format('PF2E.Item.Physical.FromSpell.Scroll', { name: spell.name, level })\r\n\r\n    const description = scrollSource.system.description.value\r\n    scrollSource.system.description.value = (() => {\r\n        const paragraphElement = document.createElement('p')\r\n        paragraphElement.append(spell.sourceId ? `@UUID[${spell.sourceId}]{${spell.name}}` : spell.description)\r\n\r\n        const containerElement = document.createElement('div')\r\n        const hrElement = document.createElement('hr')\r\n        containerElement.append(paragraphElement, hrElement)\r\n        hrElement.insertAdjacentHTML('afterend', description)\r\n\r\n        return containerElement.innerHTML\r\n    })()\r\n\r\n    scrollSource.system.temporary = temp\r\n    scrollSource.system.spell = spell.clone({ 'system.location.heightenedLevel': level }).toObject()\r\n\r\n    return scrollSource\r\n}\r\n", "import { templatePath } from '../module'\r\nimport { getItemIdentificationDCs } from '../pf2e'\r\n\r\nexport class Identify extends Application {\r\n    constructor(items, options) {\r\n        super(options)\r\n        this.items = items\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'idleuh-identify',\r\n            title: 'Identify Items',\r\n            template: templatePath('identify.html'),\r\n            width: 500,\r\n        })\r\n    }\r\n\r\n    getData(options) {\r\n        return mergeObject(super.getData(options), {\r\n            items: this.items.map(item => {\r\n                const data = item.system.identification.identified\r\n                const identified = item.isIdentified\r\n                const checked = !identified && item.getFlag('world', 'identify.checked')\r\n\r\n                const classes = []\r\n                if (identified) classes.push('identified')\r\n                if (checked) classes.push('checked')\r\n\r\n                return {\r\n                    uuid: item.uuid,\r\n                    img: data.img,\r\n                    name: item.isOfType('treasure') ? `($) ${data.name}` : data.name,\r\n                    css: classes.join(' '),\r\n                    identified,\r\n                    checked,\r\n                }\r\n            }),\r\n        })\r\n    }\r\n\r\n    activateListeners(html) {\r\n        html.find('[data-action=\"chat\"]').on('click', this.#onChat.bind(this))\r\n        html.find('[data-action=\"checks\"]').on('click', this.#onChecks.bind(this))\r\n        html.find('[data-action=\"identify\"]').on('click', this.#onIdentify.bind(this))\r\n        html.find('[data-action=\"remove\"]').on('click', this.#onRemove.bind(this))\r\n        html.find('[data-action=\"reset\"]').on('click', this.#onReset.bind(this))\r\n    }\r\n\r\n    async #onChat(event) {\r\n        const item = await getItemFromEvent(event)\r\n        item?.toMessage(undefined, { create: true })\r\n    }\r\n\r\n    async #onChecks(event) {\r\n        const item = await getItemFromEvent(event)\r\n        if (!item) return\r\n\r\n        const itemImg = item.system.identification.unidentified.img\r\n        const itemName = item.system.identification.unidentified.name\r\n        const identifiedName = item.system.identification.identified.name\r\n\r\n        const notMatchingTraditionModifier = game.settings.get('pf2e', 'identifyMagicNotMatchingTraditionModifier')\r\n        const proficiencyWithoutLevel = game.settings.get('pf2e', 'proficiencyVariant') === 'ProficiencyWithoutLevel'\r\n        const dcs = getItemIdentificationDCs(item, { proficiencyWithoutLevel, notMatchingTraditionModifier })\r\n\r\n        const skills = Object.entries(dcs).map(([slug, dc]) => {\r\n            slug = slug === 'dc' ? 'crafting' : slug\r\n            const name = game.i18n.localize(CONFIG.PF2E.skillList[slug])\r\n            return { slug, name, dc }\r\n        })\r\n\r\n        const actionOption = item.isMagical ? 'action:identify-magic' : item.isAlchemical ? 'action:identify-alchemy' : null\r\n\r\n        const content = await renderTemplate('systems/pf2e/templates/actors/identify-item-chat-skill-checks.hbs', {\r\n            itemImg,\r\n            itemName,\r\n            identifiedName,\r\n            rollOptions: ['concentrate', 'exploration', 'secret', actionOption].filter(Boolean),\r\n            skills,\r\n        })\r\n\r\n        await CONFIG.ChatMessage.documentClass.create({ user: game.user.id, content })\r\n    }\r\n\r\n    async #onIdentify(event) {\r\n        const item = await getItemFromEvent(event)\r\n        if (!item) return\r\n        await item.setIdentificationStatus(item.isIdentified ? 'unidentified' : 'identified')\r\n        this.render()\r\n    }\r\n\r\n    async #onRemove(event) {\r\n        const item = await getItemFromEvent(event)\r\n        if (!item) return\r\n\r\n        const checked = item.getFlag('world', 'identify.checked')\r\n        await item.setFlag('world', 'identify.checked', !checked)\r\n\r\n        this.render()\r\n    }\r\n\r\n    async #onReset(event) {\r\n        event.preventDefault()\r\n\r\n        for (const item of this.items) {\r\n            if (item.isIdentified || !item.getFlag('world', 'identify.checked')) continue\r\n            await item.setFlag('world', 'identify.checked', false)\r\n        }\r\n\r\n        this.render()\r\n    }\r\n}\r\n\r\nasync function getItemFromEvent(event) {\r\n    const parent = $(event.currentTarget).closest('[data-item]')\r\n    const uuid = parent.attr('data-item')\r\n    const item = await fromUuid(uuid)\r\n    if (!item) parent.remove()\r\n    return item\r\n}\r\n", "import { Identify } from '../apps/identify'\r\n\r\nexport function identify() {\r\n    if (!game.user.isGM) {\r\n        ui.notifications.warn('You not the GM yo!')\r\n        return\r\n    }\r\n\r\n    const actors = game.actors\r\n    const items = actors.reduce((acc, actor) => {\r\n        if (!actor.hasPlayerOwner) return acc\r\n        const filtered = actor.items.filter(item => item.isOfType('physical') && !item.isIdentified)\r\n        acc.push(...filtered)\r\n        return acc\r\n    }, [])\r\n\r\n    new Identify(items).render(true)\r\n}\r\n", "import { createSpellScroll } from '../pf2e'\r\n\r\nconst packId = 'pf2e.spells-srd'\r\nconst bookId = 'Item.dcALVAyJbYSovzqt'\r\n\r\nexport async function ripImaginarium(actor) {\r\n    if (!actor) return ui.notifications.warn('You must select an actor with the Imaginarium')\r\n\r\n    const book = actor.itemTypes.equipment.find(x => x.getFlag('core', 'sourceId') === bookId)\r\n    if (!book || book.system.equipped.carryType === 'dropped')\r\n        return ui.notifications.warn(\"This actor doesn't have the Imaginarium in their possession\")\r\n\r\n    const level = Math.floor(actor.level / 2) || 1\r\n    const pack = game.packs.get(packId)\r\n    const index = await pack.getIndex({ fields: ['system.level.value', 'system.traits', 'system.ritual'] })\r\n\r\n    const spells = index.filter(\r\n        x =>\r\n            x.system.level.value <= level &&\r\n            !x.system.traits.value.includes('cantrip') &&\r\n            !x.system.traits.value.includes('focus') &&\r\n            !x.system.ritual &&\r\n            x.system.traits.rarity === 'common'\r\n    )\r\n\r\n    const roll = Math.floor(Math.random() * spells.length)\r\n    const spell = spells[roll]\r\n    const uuid = `Compendium.${packId}.${spell._id}`\r\n\r\n    let messageUUID = uuid\r\n    let extraMessage = ''\r\n    const scroll = await createSpellScroll(uuid, level)\r\n    if (scroll) {\r\n        scroll.name = scroll.name + ' *'\r\n        const [item] = await actor.createEmbeddedDocuments('Item', [scroll])\r\n        extraMessage = ' and received the following:'\r\n        messageUUID = item.uuid\r\n    }\r\n\r\n    ChatMessage.create({\r\n        content: `<p>Ripped the last page of the Imaginarium${extraMessage}</p><p>@UUID[${messageUUID}]</p>`,\r\n        speaker: ChatMessage.getSpeaker({ actor: actor }),\r\n    })\r\n}\r\n", "import { findItemWithSourceId } from '../module'\r\nimport { getDcByLevel } from '../pf2e'\r\n\r\nconst effectUUID = 'Compendium.idleuh.effects.Item.jjFsfolNR04KzPVh'\r\nconst featUUID = 'Compendium.idleuh.feats.Item.X3SZ0gTpBkGw3UGX'\r\nconst debuffUUID = 'Compendium.idleuh.effects.Item.r0hicuQPY0OEAC6g'\r\n\r\nexport async function marshalInspiration(event, actor) {\r\n    if (!actor || !actor.isOwner || !actor.isOfType('character')) {\r\n        ui.notifications.warn('You must select a character token you own.')\r\n        return\r\n    }\r\n\r\n    if (!findItemWithSourceId(actor, featUUID, ['feat'])) {\r\n        ui.notifications.warn(\"This character doesn't have <strong>Inspiring Marshal Stance</strong> feat.\")\r\n        return\r\n    }\r\n\r\n    if (findItemWithSourceId(actor, debuffUUID, ['effect'])) {\r\n        ui.notifications.warn('This character cannot enter <strong>Inspiring Marshal Stance</strong>.')\r\n        return\r\n    }\r\n\r\n    const dc = getDcByLevel(actor)\r\n\r\n    const roll = await actor.skills.diplomacy.roll({\r\n        dc: { value: dc },\r\n        rollMode: 'roll',\r\n        label: '<span class=\"pf2-icon\">A</span> <b>Marshal Inspiration</b> <span>(Diplomacy Check)</span>',\r\n        extraRollNotes: [\r\n            {\r\n                outcome: ['criticalFailure'],\r\n                text: `<strong>Critical Failure</strong> You fail to enter the stance and can't take this action again for 1 minute.`,\r\n            },\r\n            {\r\n                outcome: ['failure'],\r\n                text: `<strong>Failure</strong> You fail to enter the stance.`,\r\n            },\r\n            {\r\n                outcome: ['success'],\r\n                text: `<strong>Success</strong> Your marshal's aura grants you and allies a +1 status bonus to attack rolls and saves against mental effects.`,\r\n            },\r\n            {\r\n                outcome: ['criticalSuccess'],\r\n                text: `<strong>Critical Success</strong> Your marshal's aura increases to a 20ft. emanation and grants you and allies a +1 status bonus to attack rolls and saves against mental effects.`,\r\n            },\r\n        ],\r\n    })\r\n\r\n    const success = roll.degreeOfSuccess\r\n\r\n    if (success >= 2) {\r\n        await setEffect(actor, success)\r\n    } else {\r\n        await (await getEffect(actor))?.delete()\r\n        if (success === 0) await setDebuff(actor)\r\n    }\r\n}\r\n\r\nasync function setDebuff(actor) {\r\n    const effect = await fromUuid(debuffUUID)\r\n    if (!effect) return\r\n    await actor.createEmbeddedDocuments('Item', [effect.toObject()])\r\n}\r\n\r\nasync function setEffect(actor, success) {\r\n    const radius = success === 3 ? 20 : 10\r\n    const existing = await getEffect(actor)\r\n\r\n    if (existing) {\r\n        const rules = deepClone(existing._source.system.rules)\r\n        const rule = rules.find(rule => rule.key === 'ChoiceSet')\r\n        if (rule.selection === radius) return\r\n\r\n        rule.selection = radius\r\n        existing.update({ 'system.rules': rules })\r\n        return\r\n    }\r\n\r\n    const effect = await fromUuid(effectUUID)\r\n    if (!effect) return\r\n\r\n    const source = effect.toObject()\r\n    const rule = source.system.rules.find(rule => rule.key === 'ChoiceSet')\r\n\r\n    rule.selection = radius\r\n    await actor.createEmbeddedDocuments('Item', [source])\r\n}\r\n\r\nasync function getEffect(actor) {\r\n    return findItemWithSourceId(actor, effectUUID, ['effect'])\r\n}\r\n", "const proficiency = ['untrained', 'trained', 'expert', 'master', 'legendary']\r\n\r\nexport async function groupPerception() {\r\n    if (!game.user.isGM) {\r\n        ui.notifications.warn('You not the GM yo!')\r\n        return\r\n    }\r\n\r\n    let content = ''\r\n\r\n    const party = game.actors.party\r\n    const actors = party?.members ?? []\r\n\r\n    await Promise.all(\r\n        actors.map(async actor => {\r\n            const roll = await actor.perception.roll({ createMessage: false })\r\n            const die = roll.dice[0].total\r\n\r\n            content += `<div style=\"display:flex;justify-content:space-between;\" title=\"${roll.result}\">`\r\n            content += `<span>${actor.name} (${proficiency[actor.perception.rank]})</span><span`\r\n            if (die == 20) content += ' style=\"color: green;\"'\r\n            else if (die == 1) content += ' style=\"color: red;\"'\r\n            content += `>${roll.total}</span></div>`\r\n        })\r\n    )\r\n\r\n    if (content) ChatMessage.create({ content, flavor: 'Group Perception Checks<hr>', whisper: [game.user.id] })\r\n}\r\n", "import { findItemWithSourceId } from '../module'\r\n\r\nconst FEAT_UUID = 'Compendium.pf2e.feats-srd.Item.40mZVDnIP5qBNhTH'\r\n\r\nexport function sandSnatcher(event, actor) {\r\n    if (!actor?.isOfType('character')) {\r\n        ui.notifications.warn('You need to select a character')\r\n        return\r\n    }\r\n\r\n    const feat = findItemWithSourceId(actor, FEAT_UUID, ['feat'])\r\n    if (!feat) {\r\n        ui.notifications.warn('Your selected character needs to have the feat <strong>Sand Snatcher</strong>')\r\n        return\r\n    }\r\n\r\n    const target = game.user.targets.first()?.actor\r\n\r\n    actor.getStatistic('impulse').roll({\r\n        event,\r\n        label: 'Sand Snatcher - Grapple',\r\n        target,\r\n        dc: {\r\n            slug: 'fortitude',\r\n            label: 'Fortitude DC',\r\n            value: target?.saves.fortitude.dc.value,\r\n        },\r\n        traits: ['attack', 'impulse', 'kineticist'],\r\n        extraRollNotes: [\r\n            {\r\n                text: game.i18n.localize('PF2E.Actions.Grapple.Notes.criticalSuccess'),\r\n                outcome: ['criticalSuccess'],\r\n            },\r\n            {\r\n                text: game.i18n.localize('PF2E.Actions.Grapple.Notes.success'),\r\n                outcome: ['success'],\r\n            },\r\n            {\r\n                text: game.i18n.localize('PF2E.Actions.Grapple.Notes.failure'),\r\n                outcome: ['failure'],\r\n            },\r\n            {\r\n                text: game.i18n.localize('PF2E.Actions.Grapple.Notes.criticalFailure'),\r\n                outcome: ['criticalFailure'],\r\n            },\r\n        ],\r\n    })\r\n}\r\n", "import { findItemWithSourceId, hasItemWithSourceId, socketEmit } from '../module'\r\nimport { getDcByLevel } from '../pf2e'\r\nimport { getEsotericSkill } from './shared/esoteric'\r\n\r\nconst effectUUID = 'Compendium.idleuh.effects.Item.MqgbuaqGMJ92VRze'\r\nconst targetUUID = 'Compendium.idleuh.effects.Item.Lz5hNf4dbXKjDWBa'\r\nconst mortalUUID = 'Compendium.idleuh.effects.Item.8BxBB5ztfRI9vFfZ'\r\nconst ffUUID = 'Compendium.pf2e.conditionitems.Item.AJh5ex99aV6VTggg'\r\n\r\nexport async function exploitVulnerability(event, actor, filterTypes) {\r\n    if (event.ctrlKey) {\r\n        if (game.user.isGM) cleanExploitVulnerabilityGM()\r\n        else socketEmit({ type: 'clean-exploit-vulnerability' })\r\n        ui.notifications.notify('All effects are being removed.')\r\n        return\r\n    }\r\n\r\n    const targets = game.user.targets\r\n    const [target] = targets\r\n    const targetActor = target?.actor\r\n\r\n    if (\r\n        !actor ||\r\n        !actor.isOwner ||\r\n        !actor.isOfType('character') ||\r\n        targets.size !== 1 ||\r\n        !targetActor ||\r\n        !targetActor.isOfType('creature')\r\n    ) {\r\n        ui.notifications.warn('You must select a character token you own and target another one.')\r\n        return\r\n    }\r\n\r\n    const skill = getEsotericSkill(actor)\r\n    if (!skill) return\r\n\r\n    const actionSlug = 'action:recall-knowledge'\r\n    const dc = getDcByLevel(targetActor)\r\n\r\n    const extraRollOptions = actor.getRollOptions(['all', 'skill-check', 'Esoteric'])\r\n    extraRollOptions.push(actionSlug)\r\n    extraRollOptions.push(`secret`)\r\n\r\n    const dv = targetActor.system.attributes.weaknesses\r\n    const vulnerability = dv.reduce((prev, curr) => {\r\n        if (curr.value > prev) return curr.value\r\n        return prev\r\n    }, 0)\r\n\r\n    const weaknesses = dv.filter(x => x.value === vulnerability).map(x => x.type)\r\n\r\n    const joinedWeaknessess = weaknesses.join(', ')\r\n\r\n    const weaknessStr = joinedWeaknessess ? `<strong>[ ${joinedWeaknessess} ]</strong> = ${vulnerability}<br>` : ''\r\n\r\n    const roll = await skill.roll({\r\n        extraRollOptions,\r\n        dc: { value: dc },\r\n        rollMode: 'roll',\r\n        label: `<span class=\"pf2-icon\">A</span> <b>Exploit Vulnerability</b> <span\">(Esoteric Check)</span>`,\r\n        extraRollNotes: [\r\n            {\r\n                outcome: ['criticalFailure'],\r\n                text: `<strong>Critical Failure</strong> You couldn't remember the right object to use and become distracted while you rummage through your esoterica. You become flat-footed until the beginning of your next turn.`,\r\n            },\r\n            {\r\n                outcome: ['failure'],\r\n                text: `<strong>Failure</strong> Failing to recall a salient weakness about the creature, you instead attempt to exploit a more personal vulnerability. You can exploit only the creature's personal antithesis. Your unarmed and weapon Strikes against the creature also become magical if they weren't already.`,\r\n            },\r\n            {\r\n                outcome: ['success'],\r\n                text: `${weaknessStr}<strong>Success</strong> You recall an important fact about the creature, learning its highest weakness (or one of its highest weaknesses, if it has multiple with the same value) but not its other weaknesses, resistances, or immunities. You can exploit either the creature's mortal weakness or personal antithesis. Your unarmed and weapon Strikes against the creature also become magical if they weren't already.`,\r\n            },\r\n            {\r\n                outcome: ['criticalSuccess'],\r\n                text: `${weaknessStr}<strong>Critical Success</strong> You remember the creature's weaknesses, and as you empower your esoterica, you have a flash of insight that grants even more knowledge about the creature. You learn all of the creature's resistances, weaknesses, and immunities, including the amounts of the resistances and weaknesses and any unusual weaknesses or vulnerabilities, such as what spells will pass through a golem's antimagic. You can exploit either the creature's mortal weakness or personal antithesis (see the Exploit Vulnerability class feature). Your unarmed and weapon Strikes against the creature also become magical if they weren't already.`,\r\n            },\r\n        ],\r\n    })\r\n\r\n    const success = roll.degreeOfSuccess\r\n\r\n    const effect = findItemWithSourceId(actor, effectUUID, ['effect'])\r\n    if (success >= 1 && !effect) {\r\n        const data = (await fromUuid(effectUUID)).toObject()\r\n        actor.createEmbeddedDocuments('Item', [data])\r\n    } else if (success < 1) {\r\n        effect?.delete()\r\n        const flatEffect = hasItemWithSourceId(actor, ffUUID, ['condition'])\r\n        if (!flatEffect) {\r\n            const data = (await fromUuid(ffUUID)).toObject()\r\n            actor.createEmbeddedDocuments('Item', [data])\r\n        }\r\n    }\r\n\r\n    const filteredWeaknesses = weaknesses.filter(x => !filterTypes.includes(x))\r\n\r\n    const packet = {\r\n        type: 'exploit-vulnerability',\r\n        actorId: actor.id,\r\n        targetId: target.id,\r\n        vulnerability: filteredWeaknesses.length ? vulnerability : 0,\r\n        success,\r\n    }\r\n\r\n    if (game.user.isGM) exploitVulnerabilityGM(packet)\r\n    else socketEmit(packet)\r\n}\r\n\r\nexport async function exploitVulnerabilityGM({ actorId, targetId, vulnerability, success }) {\r\n    const actor = game.actors.get(actorId)\r\n    const targetActor = canvas.tokens.get(targetId)?.actor\r\n    if (!actor || !targetActor) return\r\n\r\n    const personal = 2 + Math.floor(actor.level / 2)\r\n    const isMortal = success > 1 && vulnerability >= personal\r\n\r\n    const mortalData = (await fromUuid(mortalUUID)).toObject()\r\n    const rule = {\r\n        key: 'Weakness',\r\n        type: 'piercing',\r\n        value: vulnerability,\r\n        predicate: ['origin:effect:exploit-vulnerability'],\r\n    }\r\n    mortalData.system.rules.push(rule)\r\n\r\n    for (const token of canvas.tokens.placeables) {\r\n        const tokenActor = token.actor\r\n        if (!tokenActor || tokenActor === actor) continue\r\n\r\n        const targetEffect = findItemWithSourceId(tokenActor, targetUUID, ['effect'])\r\n        const mortalsEffect = findItemWithSourceId(tokenActor, mortalUUID, ['effect'])\r\n\r\n        await targetEffect?.delete()\r\n        await mortalsEffect?.delete()\r\n\r\n        if (success < 1) continue\r\n\r\n        if (tokenActor === targetActor) {\r\n            const data = (await fromUuid(targetUUID)).toObject()\r\n            const rule = {\r\n                key: 'Weakness',\r\n                type: 'piercing',\r\n                value: isMortal ? vulnerability : personal,\r\n                predicate: ['origin:effect:exploit-vulnerability'],\r\n            }\r\n            data.system.rules.push(rule)\r\n            tokenActor.createEmbeddedDocuments('Item', [data])\r\n        } else if (isMortal && tokenActor.id === targetActor.id) {\r\n            tokenActor.createEmbeddedDocuments('Item', [mortalData])\r\n        }\r\n    }\r\n}\r\n\r\nexport function cleanExploitVulnerabilityGM() {\r\n    for (const token of canvas.tokens.placeables) {\r\n        const tokenActor = token.actor\r\n        if (!tokenActor) continue\r\n\r\n        const effect = findItemWithSourceId(tokenActor, effectUUID, ['effect'])\r\n        const targetEffect = findItemWithSourceId(tokenActor, targetUUID, ['effect'])\r\n        const mortalsEffect = findItemWithSourceId(tokenActor, mortalUUID, ['effect'])\r\n\r\n        effect?.delete()\r\n        targetEffect?.delete()\r\n        mortalsEffect?.delete()\r\n    }\r\n}\r\n", "import { esotericCheck } from './macros/esoteric'\r\nimport { extractElement } from './macros/extract'\r\nimport { identify } from './macros/identify'\r\nimport { ripImaginarium } from './macros/imaginarium'\r\nimport { marshalInspiration } from './macros/marshal'\r\nimport { groupPerception } from './macros/perception'\r\nimport { sandSnatcher } from './macros/snatcher'\r\nimport { cleanExploitVulnerabilityGM, exploitVulnerability, exploitVulnerabilityGM } from './macros/vulnerability'\r\nimport { MODULE_ID, getSetting, socketOn } from './module'\r\n\r\nHooks.once('init', () => {\r\n    game.modules.get(MODULE_ID).api = {\r\n        macros: {\r\n            exploitVulnerability,\r\n            esotericCheck,\r\n            groupPerception,\r\n            identify,\r\n            ripImaginarium,\r\n            marshalInspiration,\r\n            sandSnatcher,\r\n            extractElement,\r\n        },\r\n    }\r\n\r\n    game.settings.register(MODULE_ID, 'jquery', {\r\n        name: 'Disable JQuery Animations',\r\n        hint: 'Will cancel sliding animations on different parts of the UI.',\r\n        type: Boolean,\r\n        default: false,\r\n        config: true,\r\n        scope: 'client',\r\n        onChange: setJQueryFx,\r\n    })\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    if (game.user.isGM) {\r\n        socketOn(onPacketReceived)\r\n    }\r\n\r\n    if (getSetting('jquery')) setJQueryFx(true)\r\n})\r\n\r\nfunction setJQueryFx(disabled) {\r\n    jQuery.fx.off = disabled\r\n}\r\n\r\nfunction onPacketReceived(packet) {\r\n    if (packet.type === 'exploit-vulnerability') exploitVulnerabilityGM(packet)\r\n    else if (packet.type === 'clean-exploit-vulnerability') cleanExploitVulnerabilityGM()\r\n}\r\n"],
  "mappings": "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",
  "names": ["getEsotericSkill", "actor", "skillKeys", "skill", "x", "__name", "esotericCheck", "event", "actor", "skill", "getEsotericSkill", "extraRollOptions", "extraRollNotes", "__name", "MODULE_ID", "getSetting", "key", "__name", "socketOn", "callback", "socketEmit", "packet", "templatePath", "path", "x", "getItemSourceIdCondition", "sourceId", "item", "includesSourceId", "getSourceId", "__name", "getItems", "actor", "itemTypes", "type", "findItemWithSourceId", "doc", "list", "hasItemWithSourceId", "FEAT_UUID", "EFFECT_UUID", "PHYSICAL_TYPES", "TYPES", "extractElement", "event", "actor", "feat", "findItemWithSourceId", "targetToken", "targetActor", "saveRoll", "source", "rules", "warnings", "hasEarth", "resistances", "type", "value", "exceptions", "doubleVs", "notes", "formula", "DamageRoll", "Roll", "damageRoll", "flavor", "note", "__name", "MAGIC_TRADITIONS", "getItemIdentificationDCs", "item", "proficiencyWithoutLevel", "notMatchingTraditionModifier", "baseDC", "calculateDC", "rarity", "getDcRarity", "dc", "adjustDCByRarity", "getIdentifyMagicDCs", "__name", "setHasElement", "set", "value", "getMagicTraditions", "traits", "t", "result", "traditions", "key", "dcByLevel", "dcAdjustments", "rarityToDCAdjustment", "adjustDC", "adjustment", "level", "pwlSetting", "getDcByLevel", "actor", "scrollCompendiumIds", "scrolls", "createSpellScroll", "uuid", "temp", "spell", "scrollUUID", "scrollSource", "trait", "description", "paragraphElement", "containerElement", "hrElement", "Identify", "items", "options", "templatePath", "item", "data", "identified", "checked", "classes", "html", "#onChat", "#onChecks", "#onIdentify", "#onRemove", "#onReset", "event", "getItemFromEvent", "itemImg", "itemName", "identifiedName", "notMatchingTraditionModifier", "proficiencyWithoutLevel", "dcs", "getItemIdentificationDCs", "skills", "slug", "dc", "name", "actionOption", "content", "__name", "parent", "uuid", "identify", "items", "acc", "actor", "filtered", "item", "Identify", "__name", "packId", "bookId", "ripImaginarium", "actor", "book", "x", "level", "spells", "roll", "spell", "uuid", "messageUUID", "extraMessage", "scroll", "createSpellScroll", "item", "__name", "effectUUID", "featUUID", "debuffUUID", "marshalInspiration", "event", "actor", "findItemWithSourceId", "dc", "getDcByLevel", "success", "setEffect", "getEffect", "setDebuff", "__name", "effect", "radius", "existing", "rules", "rule", "source", "proficiency", "groupPerception", "content", "actors", "actor", "roll", "die", "__name", "FEAT_UUID", "sandSnatcher", "event", "actor", "findItemWithSourceId", "target", "__name", "effectUUID", "targetUUID", "mortalUUID", "ffUUID", "exploitVulnerability", "event", "actor", "filterTypes", "cleanExploitVulnerabilityGM", "socketEmit", "targets", "target", "targetActor", "skill", "getEsotericSkill", "actionSlug", "dc", "getDcByLevel", "extraRollOptions", "dv", "vulnerability", "prev", "curr", "weaknesses", "x", "joinedWeaknessess", "weaknessStr", "success", "effect", "findItemWithSourceId", "data", "hasItemWithSourceId", "filteredWeaknesses", "packet", "exploitVulnerabilityGM", "__name", "actorId", "targetId", "personal", "isMortal", "mortalData", "rule", "token", "tokenActor", "targetEffect", "mortalsEffect", "MODULE_ID", "exploitVulnerability", "esotericCheck", "groupPerception", "identify", "ripImaginarium", "marshalInspiration", "sandSnatcher", "extractElement", "setJQueryFx", "socketOn", "onPacketReceived", "getSetting", "disabled", "__name", "packet", "exploitVulnerabilityGM", "cleanExploitVulnerabilityGM"]
}
