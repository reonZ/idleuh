{"mappings":"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","sources":["src/main.ts","../../../../Projects/foundry-ts/utils/foundry/module.ts","src/module.ts","../../../../Projects/foundry-ts/utils/foundry/settings.ts","../../../../Projects/foundry-ts/utils/foundry/path.ts","../../../../Projects/foundry-ts/utils/socket.ts","src/macros/esoteric.ts","src/macros/exploit-vulnerability.ts","src/macros/identify.ts","src/apps/identify.ts","../../../../Projects/foundry-ts/utils/object.ts","../../../../Projects/foundry-ts/utils/pf2e.ts","../../../../Projects/foundry-ts/utils/set.ts","src/macros/imaginarium.ts","src/macros/manual.ts","src/apps/manual-token.ts","src/macros/perception.ts","src/modules/bff.ts"],"sourcesContent":["import { getCurrentModule } from './@utils/foundry/module'\r\nimport { getSetting } from './@utils/foundry/settings'\r\nimport { socketOn } from './@utils/socket'\r\nimport { esotericCheck } from './macros/esoteric'\r\nimport { exploitVulnerability, exploitVulnerabilityGM } from './macros/exploit-vulnerability'\r\nimport { identify } from './macros/identify'\r\nimport { ripImaginarium } from './macros/imaginarium'\r\nimport { manualToken } from './macros/manual'\r\nimport { groupPerception } from './macros/perception'\r\nimport MODULE_ID from './module'\r\nimport { enableBFF } from './modules/bff'\r\n\r\nHooks.once('init', () => {\r\n    getCurrentModule().api = {\r\n        macros: {\r\n            esotericCheck,\r\n            exploitVulnerability,\r\n            manualToken,\r\n            groupPerception,\r\n            identify,\r\n            ripImaginarium,\r\n        },\r\n    }\r\n\r\n    game.settings.register(MODULE_ID, 'bff', {\r\n        name: \"Enable BFF's Ire\",\r\n        hint: \"Should the BFF's Ire be handled.\",\r\n        type: Boolean,\r\n        default: true,\r\n        config: true,\r\n        scope: 'world',\r\n        onChange: enableBFF,\r\n    })\r\n\r\n    game.settings.register(MODULE_ID, 'bffDistance', {\r\n        name: \"BFF's Ire Distance\",\r\n        hint: 'Distance in square(s) for the curse to apply.',\r\n        type: Number,\r\n        default: 1,\r\n        config: true,\r\n        scope: 'world',\r\n    })\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    if (getSetting('bff')) enableBFF(true)\r\n    if (game.user.isGM) {\r\n        socketOn(onSocket)\r\n    }\r\n})\r\n\r\nfunction onSocket(packet: Packet) {\r\n    if (packet.type === 'exploit-vulnerability') exploitVulnerabilityGM(packet)\r\n}\r\n","import MODULE_ID from '~./src/module'\r\n\r\ntype OwnModule = 'anonymous' | 'idleuh'\r\n\r\ntype ReturnedModule<T extends Record<string, any> = Record<string, any>> = Module<T> | undefined\r\ntype ReturnedModuleApi<T extends Record<string, any> = Record<string, any>> = Module<T>['api'] | undefined\r\n\r\nexport function getModule(id: 'anonymous'): ReturnedModule<AnonymousApi>\r\nexport function getModule(id: 'idleuh'): ReturnedModule<IdleuhApi>\r\nexport function getModule(id: 'pf2e-hero-actions'): ReturnedModule<HeroActionsApi>\r\nexport function getModule(id: string): ReturnedModule\r\nexport function getModule(id: string | OwnModule) {\r\n    return game.modules.get(id)\r\n}\r\n\r\nexport function getCurrentModule() {\r\n    return getModule(MODULE_ID)!\r\n}\r\n\r\nexport function getModuleApi(id: 'anonymous'): ReturnedModuleApi<AnonymousApi>\r\nexport function getModuleApi(id: 'idleuh'): ReturnedModuleApi<IdleuhApi>\r\nexport function getModuleApi(id: 'pf2e-hero-actions'): ReturnedModuleApi<HeroActionsApi>\r\nexport function getModuleApi(id: string): ReturnedModuleApi\r\nexport function getModuleApi(id: string | OwnModule) {\r\n    return getModule(id)?.api\r\n}\r\n","export default 'idleuh'\r\n","import MODULE_ID from '~./src/module'\r\nimport { getSettingLocalizationPath } from './path'\r\n\r\nexport function getSetting<T extends any>(key: string) {\r\n    return game.settings.get(MODULE_ID, key) as T\r\n}\r\n\r\nexport function setSetting(key: string, value: unknown) {\r\n    return game.settings.set(MODULE_ID, key, value)\r\n}\r\n\r\n/**\r\n * options.scope = 'world'\r\n *\r\n * options.config = false\r\n */\r\nexport function registerSetting(\r\n    options: Omit<SettingRegistration, 'choices'> & { choices?: string[] | Record<string, unknown> }\r\n) {\r\n    const name = options.name\r\n    options.scope = options.scope ?? 'world'\r\n    options.config = options.config ?? false\r\n    if (options.config) {\r\n        options.name = getSettingLocalizationPath(name, 'name')\r\n        options.hint = getSettingLocalizationPath(name, 'hint')\r\n    }\r\n    if (Array.isArray(options.choices)) {\r\n        options.choices = options.choices.reduce((choices, choice) => {\r\n            choices[choice] = getSettingLocalizationPath(name, 'choices', choice)\r\n            return choices\r\n        }, {} as Record<string, unknown>)\r\n    }\r\n    game.settings.register(MODULE_ID, name, options as SettingRegistration)\r\n}\r\n\r\n/**\r\n * options.restricted = true\r\n *\r\n * options.icon = 'fas fa-cogs'\r\n */\r\nexport function registerSettingMenu(\r\n    options: RequiredBy<Partial<Omit<SettingSubmenuConfig, 'type'>>, 'name'> & { type: ConstructorOf<FormApplication> }\r\n) {\r\n    const name = options.name\r\n    options.name = getSettingLocalizationPath('menus', name, 'name')\r\n    options.label = getSettingLocalizationPath('menus', name, 'label')\r\n    options.hint = getSettingLocalizationPath('menus', name, 'hint')\r\n    options.restricted = options.restricted ?? true\r\n    options.icon = options.icon ?? 'fas fa-cogs'\r\n    game.settings.registerMenu(MODULE_ID, name, options as SettingSubmenuConfig)\r\n}\r\n\r\nexport function getCombatTrackerConfig() {\r\n    return game.settings.get('core', 'combatTrackerConfig') as { resource: string; skipDefeated: boolean }\r\n}\r\n","import MODULE_ID from '~./src/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","import MODULE_ID from '~./src/module'\r\n\r\nexport function socketOn<T extends SocketPacket = SocketPacket>(callback: SocketCallback<T>) {\r\n    game.socket.on(`module.${MODULE_ID}`, callback)\r\n}\r\n\r\nexport function socketEmit<T extends SocketPacket = SocketPacket>(packet: T) {\r\n    game.socket.emit(`module.${MODULE_ID}`, packet)\r\n}\r\n","export function esotericCheck(event: JQuery.TriggeredEvent, actor: ActorPF2e) {\r\n    const targets = game.user.targets as Set<TokenPF2e>\r\n    const [target] = targets\r\n\r\n    if (!actor || !actor.isOwner || !actor.isOfType('character') || targets.size !== 1 || !target.actor) {\r\n        ui.notifications.warn('You must select a character token you own and target another one.')\r\n        return\r\n    }\r\n\r\n    const skillKeys = ['esoteric', 'esoteric-lore', 'lore-esoteric']\r\n    const skill = Object.values(actor.system.skills).find(x => skillKeys.includes(x.slug))\r\n\r\n    if (!skill) {\r\n        ui.notifications.warn(`This character doesn't have the 'Esoteric' skill`)\r\n        return\r\n    }\r\n\r\n    const skillName = skill.label\r\n    const actionSlug = 'action:recall-knowledge'\r\n    const actionName = game.i18n.localize('PF2E.RecallKnowledge.Label')\r\n\r\n    const DCbyLevel = [14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 44, 46, 48, 50]\r\n\r\n    const targetLevel = target.actor.system.details.level.value\r\n    const DC = targetLevel < 0 ? 13 : DCbyLevel[targetLevel]\r\n\r\n    const options = actor.getRollOptions(['all', 'skill-check', skillName.toLowerCase()])\r\n    options.push(actionSlug)\r\n    options.push(`secret`)\r\n\r\n    const dv = /** @type {Array<{type: String, value: number}>} */ target.actor.system.traits.dv\r\n    const vulnerability = dv.reduce((prev, curr) => {\r\n        if (curr.value > prev) return curr.value\r\n        return prev\r\n    }, 0)\r\n\r\n    const v = vulnerability ? ` ${vulnerability}` : ''\r\n    const uuid = '@UUID[Compendium.idleuh.effects.MqgbuaqGMJ92VRze]'\r\n    const success = game.i18n.localize('PF2E.Check.Result.Degree.Check.success')\r\n    const failure = game.i18n.localize('PF2E.Check.Result.Degree.Check.failure')\r\n    const criticalFailure = game.i18n.localize('PF2E.Check.Result.Degree.Check.criticalFailure')\r\n\r\n    let content = `<span class=\"pf2-icon\">A</span> <b>${actionName}</b> - <p class=\"compact-text\">${skillName}</p>`\r\n    content += `<p><strong>${success}</strong> ${uuid}{Effect: Exploit Vulnerability${v}}</p>`\r\n    content += `<p><strong>${failure}</strong> ${uuid}</p>`\r\n    content += `<p><strong>${criticalFailure}</strong> @UUID[Compendium.pf2e.conditionitems.AJh5ex99aV6VTggg]</p>`\r\n\r\n    game.pf2e.Check.roll(\r\n        new game.pf2e.CheckModifier(content, skill),\r\n        {\r\n            actor,\r\n            target: { actor: target.actor, token: target.document },\r\n            title: game.i18n.format('PF2E.SkillCheckWithName', { skillName }),\r\n            type: 'skill-check',\r\n            options,\r\n            dc: { value: DC },\r\n        },\r\n        event\r\n    )\r\n}\r\n","import { socketEmit } from '~src/@utils/socket'\r\n\r\nconst effectID = 'Item.bPm8eSVCrpYiWW2y'\r\nconst effectUUID = 'Compendium.idleuh.effects.MqgbuaqGMJ92VRze'\r\nconst ffUUID = 'Compendium.pf2e.conditionitems.AJh5ex99aV6VTggg'\r\n\r\nexport async function exploitVulnerability(event: JQuery.TriggeredEvent, actor: ActorPF2e) {\r\n    const targets = game.user.targets as Set<TokenPF2e>\r\n    const [target] = targets\r\n    const targetActor = target?.actor\r\n\r\n    if (!actor || !actor.isOwner || !actor.isOfType('character') || targets.size !== 1 || !targetActor) {\r\n        ui.notifications.warn('You must select a character token you own and target another one.')\r\n        return\r\n    }\r\n\r\n    const skillKeys = ['esoteric', 'esoteric-lore', 'lore-esoteric']\r\n    const skill = Object.values(actor.system.skills).find(x => skillKeys.includes(x.slug))\r\n\r\n    if (!skill) {\r\n        ui.notifications.warn(`This character doesn't have the 'Esoteric' skill`)\r\n        return\r\n    }\r\n\r\n    const actionSlug = 'action:recall-knowledge'\r\n    const DCbyLevel = [14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 44, 46, 48, 50]\r\n    const targetLevel = targetActor.system.details.level.value\r\n    const dc = targetLevel < 0 ? 13 : DCbyLevel[targetLevel]\r\n\r\n    const options = actor.getRollOptions(['all', 'skill-check', 'Esoteric'])\r\n    options.push(actionSlug)\r\n    options.push(`secret`)\r\n\r\n    const dv = targetActor.system.attributes.weaknesses\r\n    const vulnerability = dv.reduce((prev, curr) => {\r\n        if (curr.value > prev) return curr.value\r\n        return prev\r\n    }, 0)\r\n\r\n    const roll = (await game.pf2e.Check.roll(\r\n        new game.pf2e.CheckModifier('test', skill),\r\n        {\r\n            actor,\r\n            target: { actor: targetActor, token: target.document },\r\n            title: game.i18n.format('PF2E.SkillCheckWithName', { skillName: 'Esoteric' }),\r\n            type: 'skill-check',\r\n            options,\r\n            dc: { value: dc },\r\n            createMessage: false,\r\n        },\r\n        event\r\n    ))!\r\n\r\n    const total = roll.total ?? 0\r\n    const success = getSuccess(roll, dc)\r\n\r\n    const packet: ExploitVulnerabilityPacket = {\r\n        type: 'exploit-vulnerability',\r\n        actorId: actor.id,\r\n        targetId: target.id,\r\n        dc,\r\n        success,\r\n        total,\r\n        vulnerability,\r\n    }\r\n\r\n    if (game.user.isGM) exploitVulnerabilityGM(packet)\r\n    else socketEmit(packet)\r\n}\r\n\r\nexport async function exploitVulnerabilityGM({\r\n    actorId,\r\n    targetId,\r\n    success,\r\n    vulnerability,\r\n    dc,\r\n    total,\r\n}: ExploitVulnerabilityPacket) {\r\n    const actor = game.actors.get<ActorPF2e>(actorId)\r\n    const targetActor = canvas.tokens.get(targetId)?.actor as ActorPF2e | undefined | null\r\n    if (!actor || !targetActor) return\r\n\r\n    canvas.tokens.placeables.forEach(token => {\r\n        const tokenActor = token.actor as ActorPF2e\r\n        if (!tokenActor || tokenActor === actor) return\r\n\r\n        const effect = getEffect(tokenActor)\r\n\r\n        if (tokenActor === targetActor) {\r\n            if (success <= 0 && effect) effect.delete()\r\n            else if (success >= 1 && !effect) addEffect(tokenActor)\r\n        } else if (effect) {\r\n            effect.delete()\r\n        }\r\n    })\r\n\r\n    const effect = getEffect(actor)\r\n    if (success >= 1) {\r\n        const badge = (success >= 2 && vulnerability) || 1\r\n        if (!effect) addEffect(actor, badge)\r\n        else if (effect.badge?.value !== badge) effect.update({ 'system.badge.value': badge })\r\n    } else {\r\n        effect?.delete()\r\n        addFlatFooted(actor)\r\n    }\r\n\r\n    createMsg(actor, targetActor, dc, total, success)\r\n}\r\n\r\nfunction getSuccess(roll: Rolled<CheckRoll>, dc: number) {\r\n    const total = roll.total!\r\n    const die = roll.dice[0].total!\r\n\r\n    let success = total >= dc + 10 ? 3 : total >= dc ? 2 : total > dc - 10 ? 1 : 0\r\n    if (die === 20) success++\r\n    else if (die === 1) success--\r\n\r\n    return success\r\n}\r\n\r\nfunction createMsg(actor: ActorPF2e, target: ActorPF2e, dc: number, total: number, success: number) {\r\n    const by = total - dc\r\n    const css = success >= 3 ? 'criticalSuccess' : success === 2 ? 'success' : success === 1 ? 'failure' : 'criticalFailure'\r\n    const txt = success >= 3 ? 'Critical Success' : success === 2 ? 'Success' : success === 1 ? 'Failure' : 'Critical Failure'\r\n\r\n    let flavor = `<h4 class=\"action\"><span class=\"pf2-icon\">A</span> <b>Exploit Vulnerability</b> <p class=\"compact-text\">(Esoteric Check)</p></h4>\r\n<div class=\"target-dc-result\" data-visibility=\"gm\">\r\n    <div class=\"target-dc\" data-visibility=\"gm\"><span data-visibility=\"gm\" data-whose=\"target\">\r\n        Target: ${target.name}</span> <span data-visibility=\"gm\" data-whose=\"target\">(Standard DC ${dc})</span></div>\r\n    <div class=\"result degree-of-success\" data-visibility=\"gm\">Result: \r\n        <span data-whose=\"self\" class=\"${css}\">${txt}</span> <span data-whose=\"target\">by ${by >= 0 ? '+' : ''}${by}</span>\r\n    </div>\r\n</div>`\r\n\r\n    if (success >= 3) {\r\n        flavor += `<section class=\"roll-note\">\r\n    <strong>Critical Success</strong> You remember the creature's weaknesses, and as you empower your esoterica, \r\n    you have a flash of insight that grants even more knowledge about the creature. \r\n    You learn all of the creature's resistances, weaknesses, and immunities, \r\n    including the amounts of the resistances and weaknesses and any unusual weaknesses or vulnerabilities, \r\n    such as what spells will pass through a golem's antimagic. \r\n    You can exploit either the creature's mortal weakness or personal antithesis (see the Exploit Vulnerability class feature). \r\n    Your unarmed and weapon Strikes against the creature also become magical if they weren't already.\r\n</section>`\r\n    } else if (success === 2) {\r\n        flavor += `<section class=\"roll-note\">\r\n    <strong>Success</strong> You recall an important fact about the creature, \r\n    learning its highest weakness (or one of its highest weaknesses, if it has multiple with the same value) but not its other weaknesses, \r\n    resistances, or immunities. You can exploit either the creature's mortal weakness or personal antithesis. \r\n    Your unarmed and weapon Strikes against the creature also become magical if they weren't already.\r\n</section>`\r\n    } else if (success === 1) {\r\n        flavor += `<section class=\"roll-note\">\r\n    <strong>Failure</strong> Failing to recall a salient weakness about the creature, \r\n    you instead attempt to exploit a more personal vulnerability. \r\n    You can exploit only the creature's personal antithesis. \r\n    Your unarmed and weapon Strikes against the creature also become magical if they weren't already.\r\n</section>`\r\n    } else {\r\n        flavor += `<section class=\"roll-note\">\r\n<strong>Critical Failure</strong> You couldn't remember the right object to use and become distracted while you rummage through your esoterica. \r\nYou become flat-footed until the beginning of your next turn.\r\n</section>`\r\n    }\r\n\r\n    ChatMessage.create({ flavor, actor })\r\n}\r\n\r\nfunction getEffect(actor: ActorPF2e) {\r\n    return actor.itemTypes.effect.find(effect => effect.getFlag('core', 'sourceId') === effectID)\r\n}\r\n\r\nasync function addEffect(actor: ActorPF2e, badge?: number) {\r\n    const data = ((await fromUuid(effectUUID)) as EffectPF2e).toObject()\r\n    if (badge) setProperty(data, 'system.badge.value', badge)\r\n    actor.createEmbeddedDocuments('Item', [data])\r\n}\r\n\r\nasync function addFlatFooted(actor: ActorPF2e) {\r\n    const hasEffect = actor.itemTypes.condition.some(x => x.getFlag('core', 'sourceId') === ffUUID)\r\n    if (hasEffect) return\r\n\r\n    const data = ((await fromUuid(ffUUID)) as ConditionPF2e).toObject()\r\n    actor.createEmbeddedDocuments('Item', [data])\r\n}\r\n","import { IdleuhIdentifyApp } from '~src/apps/identify'\r\n\r\nexport function identify() {\r\n    if (!game.user.isGM) {\r\n        ui.notifications.warn('You not the GM yo!')\r\n        return\r\n    }\r\n\r\n    const actors = game.actors as Actors<ActorPF2e>\r\n    const items = actors.reduce((acc, actor) => {\r\n        if (!actor.hasPlayerOwner) return acc\r\n        const filtered = actor.items.filter(\r\n            item => item.isOfType('physical') && !(item as PhysicalItemPF2e).isIdentified\r\n        ) as PhysicalItemPF2e[]\r\n        acc.push(...filtered)\r\n        return acc\r\n    }, [] as PhysicalItemPF2e[])\r\n\r\n    new IdleuhIdentifyApp(items).render(true)\r\n}\r\n","import { templatePath } from '~src/@utils/foundry/path'\r\nimport { objectHasKey } from '~src/@utils/object'\r\nimport { identifyItem } from '~src/@utils/pf2e'\r\n\r\nexport class IdleuhIdentifyApp extends Application {\r\n    items: PhysicalItemPF2e[]\r\n\r\n    constructor(items: PhysicalItemPF2e[], options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this.items = items\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'idleuh-identify',\r\n            title: 'Identify Items',\r\n            template: templatePath('identify.html'),\r\n            width: 500,\r\n        })\r\n    }\r\n\r\n    getData(options?: Partial<ApplicationOptions> | undefined) {\r\n        return mergeObject(super.getData(options), {\r\n            items: this.items.map(item => {\r\n                const data = item.system.identification.identified\r\n                const identified = item.isIdentified\r\n                const checked = !identified && (item.getFlag('world', 'identify.checked') as boolean)\r\n\r\n                const classes = [] as string[]\r\n                if (identified) classes.push('identified')\r\n                if (checked) classes.push('checked')\r\n\r\n                return {\r\n                    uuid: item.uuid,\r\n                    img: data.img,\r\n                    name: item.isOfType('treasure') ? `($) ${data.name}` : data.name,\r\n                    css: classes.join(' '),\r\n                    identified,\r\n                    checked,\r\n                }\r\n            }),\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>) {\r\n        // super.activateListeners(html)\r\n\r\n        html.find('[data-action=\"chat\"]').on('click', this.#onChat.bind(this))\r\n        html.find('[data-action=\"checks\"]').on('click', this.#onChecks.bind(this))\r\n        html.find('[data-action=\"identify\"]').on('click', this.#onIdentify.bind(this))\r\n        html.find('[data-action=\"remove\"]').on('click', this.#onRemove.bind(this))\r\n        html.find('[data-action=\"reset\"]').on('click', this.#onReset.bind(this))\r\n    }\r\n\r\n    async #onChat(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        item?.toMessage(undefined, { create: true })\r\n    }\r\n\r\n    async #onChecks(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        if (!item) return\r\n\r\n        const itemImg = item.system.identification.unidentified.img\r\n        const itemName = item.system.identification.unidentified.name\r\n        const identifiedName = item.system.identification.identified.name\r\n\r\n        const notMatchingTraditionModifier = game.settings.get('pf2e', 'identifyMagicNotMatchingTraditionModifier') as number\r\n        const proficiencyWithoutLevel = game.settings.get('pf2e', 'proficiencyVariant') === 'ProficiencyWithoutLevel'\r\n        const dcs = identifyItem(item, { proficiencyWithoutLevel, notMatchingTraditionModifier })\r\n\r\n        const skills = Object.entries(dcs)\r\n            .filter(([shortForm, dc]) => Number.isInteger(dc) && objectHasKey(CONFIG.PF2E.skills, shortForm))\r\n            .map(([shortForm, dc]) => ({\r\n                shortForm,\r\n                dc,\r\n                name: game.i18n.localize(CONFIG.PF2E.skills[shortForm as keyof typeof CONFIG.PF2E.skills]),\r\n            }))\r\n\r\n        const content = await renderTemplate('systems/pf2e/templates/actors/identify-item-chat-skill-checks.hbs', {\r\n            itemImg,\r\n            itemName,\r\n            identifiedName,\r\n            skills,\r\n        })\r\n\r\n        await ChatMessage.create({ user: game.user.id, content })\r\n    }\r\n\r\n    async #onIdentify(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        if (!item) return\r\n\r\n        await item.update({\r\n            'system.identification.status': item.isIdentified ? 'unidentified' : 'identified',\r\n            'system.identification.unidentified': item.getMystifiedData('unidentified'),\r\n            'flags.world.identify.checked': false,\r\n        })\r\n\r\n        this.render()\r\n    }\r\n\r\n    async #onRemove(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        if (!item) return\r\n\r\n        const checked = item.getFlag('world', 'identify.checked')\r\n        await item.setFlag('world', 'identify.checked', !checked)\r\n\r\n        this.render()\r\n    }\r\n\r\n    async #onReset(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        for (const item of this.items) {\r\n            if (item.isIdentified || !item.getFlag('world', 'identify.checked')) continue\r\n            await item.setFlag('world', 'identify.checked', false)\r\n        }\r\n\r\n        this.render()\r\n    }\r\n}\r\n\r\nasync function getItemFromEvent(event: JQuery.TriggeredEvent<any, any, HTMLElement>) {\r\n    const parent = $(event.currentTarget).closest('[data-item]')\r\n    const uuid = parent.attr('data-item') as string\r\n    const item = await fromUuid(uuid)\r\n    if (!item) parent.remove()\r\n    return item as PhysicalItemPF2e | null\r\n}\r\n","/** Check if a key is present in a given object in a type safe way */\r\nexport function objectHasKey<T>(obj: T, key: unknown): key is keyof T {\r\n    return (typeof key === 'string' || typeof key === 'number') && key in obj\r\n}\r\n","import { setHasElement } from './set'\r\n\r\nexport const PHYSICAL_ITEM_TYPES = new Set([\r\n    'armor',\r\n    'backpack',\r\n    'book',\r\n    'consumable',\r\n    'equipment',\r\n    'treasure',\r\n    'weapon',\r\n] as const)\r\n\r\nexport const dcByLevel = new Map([\r\n    [-1, 13],\r\n    [0, 14],\r\n    [1, 15],\r\n    [2, 16],\r\n    [3, 18],\r\n    [4, 19],\r\n    [5, 20],\r\n    [6, 22],\r\n    [7, 23],\r\n    [8, 24],\r\n    [9, 26],\r\n    [10, 27],\r\n    [11, 28],\r\n    [12, 30],\r\n    [13, 31],\r\n    [14, 32],\r\n    [15, 34],\r\n    [16, 35],\r\n    [17, 36],\r\n    [18, 38],\r\n    [19, 39],\r\n    [20, 40],\r\n    [21, 42],\r\n    [22, 44],\r\n    [23, 46],\r\n    [24, 48],\r\n    [25, 50],\r\n])\r\n\r\nexport const dcAdjustments = new Map([\r\n    ['incredibly easy', -10],\r\n    ['very easy', -5],\r\n    ['easy', -2],\r\n    ['normal', 0],\r\n    ['hard', 2],\r\n    ['very hard', 5],\r\n    ['incredibly hard', 10],\r\n])\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal']) as Set<MagicTradition>\r\n\r\nexport function adjustDC(dc: number, adjustment: DCAdjustment = 'normal') {\r\n    return dc + (dcAdjustments.get(adjustment) ?? 0)\r\n}\r\n\r\nexport function rarityToDCAdjustment(rarity: Rarity = 'common'): PositiveDCAdjustment {\r\n    if (rarity === 'uncommon') return 'hard'\r\n    else if (rarity === 'rare') return 'very hard'\r\n    else if (rarity === 'unique') return 'incredibly hard'\r\n    else return 'normal'\r\n}\r\n\r\nexport function adjustDCByRarity(dc: number, rarity: Rarity = 'common') {\r\n    return adjustDC(dc, rarityToDCAdjustment(rarity))\r\n}\r\n\r\nexport function calculateDC(level: number, { proficiencyWithoutLevel = false, rarity = 'common' }: DCOptions = {}) {\r\n    // assume level 0 if garbage comes in. We cast level to number because the backing data may actually have it\r\n    // stored as a string, which we can't catch at compile time\r\n    const dc = dcByLevel.get(level) ?? 14\r\n    if (proficiencyWithoutLevel) {\r\n        // -1 shouldn't be subtracted since it's just\r\n        // a creature level and not related to PC levels\r\n        return adjustDCByRarity(dc - Math.max(level, 0), rarity)\r\n    } else {\r\n        return adjustDCByRarity(dc, rarity)\r\n    }\r\n}\r\n\r\n/** Extract all traits from an item, that match a magic tradition */\r\nfunction getMagicTraditions(item: PhysicalItemPF2e) {\r\n    const traits = item.system.traits.value\r\n    return new Set(traits.filter(t => setHasElement(MAGIC_TRADITIONS, t)))\r\n}\r\n\r\nexport function identifyMagic(item: PhysicalItemPF2e, baseDc: number, notMatchingTraditionModifier: number) {\r\n    const result = {\r\n        occult: baseDc,\r\n        primal: baseDc,\r\n        divine: baseDc,\r\n        arcane: baseDc,\r\n    }\r\n    const traditions = getMagicTraditions(item)\r\n    for (const key of MAGIC_TRADITIONS) {\r\n        // once an item has a magic tradition, all skills\r\n        // that don't match the tradition are hard\r\n        if (traditions.size > 0 && !traditions.has(key)) {\r\n            result[key] = baseDc + notMatchingTraditionModifier\r\n        }\r\n    }\r\n    return { arc: result.arcane, nat: result.primal, rel: result.divine, occ: result.occult }\r\n}\r\n\r\n/** All cursed items are incredibly hard to identify */\r\nexport function getDcRarity(item: PhysicalItemPF2e) {\r\n    return item.traits.has('cursed') ? 'unique' : item.rarity\r\n}\r\n\r\nexport function identifyItem(\r\n    item: PhysicalItemPF2e,\r\n    { proficiencyWithoutLevel = false, notMatchingTraditionModifier }: IdentifyItemOptions,\r\n    noDC = false\r\n) {\r\n    const baseDC = calculateDC(item.level, { proficiencyWithoutLevel })\r\n    const rarity = getDcRarity(item)\r\n    const dc = adjustDCByRarity(baseDC, rarity)\r\n    if (item.isMagical) return identifyMagic(item, dc, notMatchingTraditionModifier)\r\n    if (!noDC) return { cra: dc }\r\n    if (item.isAlchemical) return { cra: dc }\r\n    return { dc: dc }\r\n}\r\n\r\nexport function hasInvestedProperty(source: ItemSourcePF2e): source is MagicItemSource {\r\n    return isPhysicalData(source) && 'invested' in source.system.equipped\r\n}\r\n\r\n/** Checks if the given item data is a physical item with a quantity and other physical fields. */\r\nexport function isPhysicalData(source: ItemSourcePF2e): source is PhysicalItemSource\r\nexport function isPhysicalData(source: PreCreate<ItemSourcePF2e>): source is PreCreate<PhysicalItemSource>\r\nexport function isPhysicalData(source: ItemSourcePF2e | PreCreate<ItemSourcePF2e>): boolean {\r\n    return setHasElement(PHYSICAL_ITEM_TYPES, source.type)\r\n}\r\n","/** Check if an element is present in the provided set. Especially useful for checking against literal sets */\r\nexport function setHasElement<T extends Set<unknown>>(set: T, value: unknown): value is SetElement<T> {\r\n    return set.has(value)\r\n}\r\n","const packId = 'pf2e.spells-srd'\r\nconst bookId = 'Item.dcALVAyJbYSovzqt'\r\n\r\nexport async function ripImaginarium(actor: ActorPF2e) {\r\n    if (!actor) return ui.notifications.warn('You must select an actor with the Imaginarium')\r\n\r\n    const book = actor.itemTypes.equipment.find(x => x.getFlag('core', 'sourceId') === bookId)\r\n    if (!book || book.system.equipped.carryType === 'dropped')\r\n        return ui.notifications.warn(\"This actor doesn't have the Imaginarium in their possession\")\r\n\r\n    const level = Math.floor(actor.level / 2)\r\n    const pack = game.packs.get(packId)!\r\n    const index = await pack.getIndex({ fields: ['system.level.value', 'system.traits', 'system.category.value'] })\r\n\r\n    const spells = index.filter(\r\n        x =>\r\n            x.system.level.value === level &&\r\n            !x.system.traits.value.includes('cantrip') &&\r\n            x.system.category.value !== 'ritual' &&\r\n            x.system.category.value !== 'focus' &&\r\n            x.system.traits.rarity === 'common'\r\n    )\r\n\r\n    const roll = Math.floor(Math.random() * spells.length)\r\n    const spell = spells[roll]\r\n    const uuid = `Compendium.${packId}.${spell._id}`\r\n\r\n    ChatMessage.create({\r\n        content: `<p>Ripped the last page of the Imaginarium</p><p>@UUID[${uuid}]</p>`,\r\n        speaker: ChatMessage.getSpeaker(actor),\r\n    })\r\n}\r\n","import { IdleuhManualTokenApp } from '~src/apps/manual-token'\r\n\r\nexport async function manualToken(token: TokenPF2e) {\r\n    if (!token || !token.isOwner) {\r\n        ui.notifications.warn('You need to select an owned token.')\r\n        return\r\n    }\r\n    new IdleuhManualTokenApp(token.document).render(true)\r\n}\r\n","import { templatePath } from '~src/@utils/foundry/path'\r\n\r\nexport class IdleuhManualTokenApp extends FormApplication<TokenDocumentPF2e> {\r\n    static get defaultOptions(): FormApplicationOptions {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'idleuh-manual-token',\r\n            template: templatePath('manual-token.html'),\r\n            title: 'Manual Token Update',\r\n            width: 500,\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find('button[type=button]').on('click', () => this.close())\r\n\r\n        const scale = html.find('input[name=scale]') as JQuery<HTMLInputElement>\r\n        const scaleValue = scale.next('span')\r\n        scale.on('input', () => {\r\n            const val = scale[0].valueAsNumber\r\n            scaleValue.text(val.toFixed(2))\r\n        })\r\n\r\n        const grid = html.find('input[name=grid]') as JQuery<HTMLInputElement>\r\n        const gridValue = grid.next('span')\r\n        grid.on('input', () => {\r\n            const val = grid[0].valueAsNumber\r\n            gridValue.text(val.toFixed(1))\r\n        })\r\n    }\r\n\r\n    protected async _updateObject(event: Event, formData: Record<string, unknown>) {\r\n        const data = this.object\r\n\r\n        const newData = {\r\n            ['displayName']: Number(formData.name),\r\n            ['displayBars']: Number(formData.hp),\r\n            ['texture.src']: formData.img,\r\n            ['flags.pf2e.linkToActorSize']: !!formData.link,\r\n            ['width']: Number(formData.grid),\r\n            ['height']: Number(formData.grid),\r\n            ['texture.scaleX']: Number(formData.scale),\r\n            ['texture.scaleY']: Number(formData.scale),\r\n        }\r\n\r\n        const update = {}\r\n        for (const [k, v] of Object.entries(newData)) {\r\n            if (getProperty(data, k) === v) continue\r\n            setProperty(update, k, v)\r\n        }\r\n\r\n        if (Object.keys(update).length) this.object.update(update)\r\n    }\r\n}\r\n","const proficiency = ['trained', 'expert', 'master', 'legendary', 'untrained']\r\n\r\nexport async function groupPerception() {\r\n    if (!game.user.isGM) {\r\n        ui.notifications.warn('You not the GM yo!')\r\n        return\r\n    }\r\n\r\n    let result = '<hr>'\r\n\r\n    const tokens = canvas.tokens as TokenLayerPF2e\r\n    for (const token of tokens.placeables) {\r\n        const actor = token.actor\r\n        if (!actor || !actor.isOfType('character', 'npc') || !actor.hasPlayerOwner || !actor.attributes.perception) continue\r\n        result += await rollPerception(actor)\r\n    }\r\n\r\n    ChatMessage.create({ content: result, flavor: 'Group Perception Checks', whisper: [game.user.id] })\r\n}\r\n\r\nasync function rollPerception(actor: CharacterPF2e | NPCPF2e) {\r\n    const perception = actor.attributes.perception\r\n    const check = new game.pf2e.CheckModifier('', perception)\r\n    const roll = await game.pf2e.Check.roll(check, { actor: actor, type: 'skill-check', createMessage: false, skipDialog: true })\r\n    if (!roll) return ''\r\n\r\n    const rank = proficiency[(perception.rank ?? 1) - 1]\r\n    const die = roll.dice[0].total\r\n    if (die === undefined) return ''\r\n\r\n    let result = `<div style=\"display:flex;justify-content:space-between;\" title=\"${roll.result}\">`\r\n    result += `<span>${actor.name} (${rank})</span><span`\r\n    if (die == 20) result += ' style=\"color: green;\"'\r\n    else if (die == 1) result += ' style=\"color: red;\"'\r\n\r\n    return `${result}>${roll.total}</span></div>`\r\n}\r\n","import { getSetting } from '~src/@utils/foundry/settings'\r\n\r\nconst effectId = 'Item.pFguo7KVVjFMqHhe'\r\n\r\nexport function enableBFF(enable: boolean) {\r\n    if (!game.user.isGM) return\r\n    const method = enable ? 'on' : 'off'\r\n    Hooks[method]('updateToken', updateToken)\r\n}\r\n\r\nfunction getDebuff(actor: ActorPF2e) {\r\n    return actor.itemTypes.effect.find(x => x.getFlag('core', 'sourceId') === effectId)\r\n}\r\n\r\nfunction updateToken(token: TokenDocument, data: DocumentUpdateData<TokenDocument>) {\r\n    const actor = token.actor as ActorPF2e | undefined\r\n    if (!('x' in data || 'y' in data) || !actor) return\r\n    const debuff = getDebuff(actor)\r\n    if (debuff) setDebuff(token, debuff)\r\n}\r\n\r\nfunction setDebuff(firstToken: TokenDocument, firstDebuff: EffectPF2e) {\r\n    let otherToken\r\n    let otherDebuff\r\n\r\n    const tokens = canvas.tokens.placeables as TokenPF2e[]\r\n    for (const token of tokens) {\r\n        const otherActor = token.actor\r\n        if (!otherActor || otherActor === firstToken.actor) continue\r\n        const debuff = getDebuff(otherActor)\r\n        if (!debuff) continue\r\n        otherToken = token\r\n        otherDebuff = debuff\r\n        break\r\n    }\r\n\r\n    if (!otherToken || !otherDebuff) {\r\n        firstDebuff.update({ 'system.badge.value': 0 })\r\n        return\r\n    }\r\n\r\n    const distance = canvas.grid.measureDistance(firstToken, otherToken, { gridSpaces: true })\r\n    const squares = distance / 5\r\n    const debuff = squares <= getSetting<number>('bffDistance') ? 1 : 0\r\n\r\n    firstDebuff.update({ 'system.badge.value': debuff })\r\n    otherDebuff.update({ 'system.badge.value': debuff })\r\n}\r\n"],"names":[],"version":3,"file":"main.js.map"}