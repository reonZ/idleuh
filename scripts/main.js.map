{"mappings":"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","sources":["src/main.ts","../../../../Projects/foundry-ts/utils/foundry/module.ts","src/module.ts","src/macros/esoteric.ts","src/macros/identify.ts","src/apps/identify.ts","../../../../Projects/foundry-ts/utils/foundry/path.ts","../../../../Projects/foundry-ts/utils/object.ts","../../../../Projects/foundry-ts/utils/pf2e.ts","../../../../Projects/foundry-ts/utils/set.ts","src/macros/manual.ts","src/apps/manual-token.ts","src/macros/perception.ts"],"sourcesContent":["import { getCurrentModule } from './@utils/foundry/module'\r\nimport { esotericCheck } from './macros/esoteric'\r\nimport { identify } from './macros/identify'\r\nimport { manualToken } from './macros/manual'\r\nimport { groupPerception } from './macros/perception'\r\n\r\nHooks.once('init', () => {\r\n    getCurrentModule().api = {\r\n        macros: {\r\n            esotericCheck,\r\n            manualToken,\r\n            groupPerception,\r\n            identify,\r\n        },\r\n    }\r\n})\r\n","import MODULE_ID from '~./src/module'\r\n\r\nexport function getCurrentModule<T extends Record<string, any> = Record<string, any>>() {\r\n    return game.modules.get(MODULE_ID) as Module<T>\r\n}\r\n\r\nexport function getModuleApi(id: 'anonymous'): ModuleApi<AnonymousApi>\r\nexport function getModuleApi(id: 'idleuh'): ModuleApi<IdleuhApi>\r\nexport function getModuleApi(id: string): ModuleApi {\r\n    return game.modules.get(id)?.api\r\n}\r\n","export default 'idleuh'\r\n","export function esotericCheck(event: JQuery.TriggeredEvent, actor: ActorPF2e) {\r\n    const targets = game.user.targets as unknown as Set<TokenDocumentPF2e>\r\n    const [target] = targets\r\n\r\n    if (!actor || !actor.isOwner || !actor.isOfType('character') || targets.size !== 1 || !target.actor) {\r\n        ui.notifications.warn('You must select a character token you own and target another one.')\r\n        return\r\n    }\r\n\r\n    const skillName = 'Esoteric'\r\n    const skillKey = 'esoteric'\r\n    const actionSlug = 'action:recall-knowledge'\r\n    const actionName = 'Recall Knowledge'\r\n\r\n    if (!(skillKey in actor.system.skills)) {\r\n        ui.notifications.warn(`This character doesn't have the '${skillName}' skill`)\r\n        return\r\n    }\r\n\r\n    const DCbyLevel = [14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 44, 46, 48, 50]\r\n\r\n    const targetLevel = target.actor.system.details.level.value\r\n    const DC = targetLevel < 0 ? 13 : DCbyLevel[targetLevel]\r\n\r\n    const options = actor.getRollOptions(['all', 'skill-check', skillName.toLowerCase()])\r\n    options.push(`action:${actionSlug}`)\r\n    options.push(`secret`)\r\n\r\n    const dv = /** @type {Array<{type: String, value: number}>} */ target.actor.system.traits.dv\r\n    const vulnerability = dv.reduce((prev, curr) => {\r\n        if (curr.value > prev) return curr.value\r\n        return prev\r\n    }, 0)\r\n\r\n    const v = vulnerability ? ` ${vulnerability}` : ''\r\n    const link = `@UUID[Compendium.idleuh.effects.MqgbuaqGMJ92VRze]{Effect: Exploit Vulnerability${v}}`\r\n\r\n    game.pf2e.Check.roll(\r\n        new game.pf2e.CheckModifier(\r\n            `<span class=\"pf2-icon\">A</span> <b>${actionName}</b> - <p class=\"compact-text\">${skillName} Skill Check</p><p><strong>Success</strong> ${link}</p><p><strong>Failure</strong> @UUID[Compendium.idleuh.effects.MqgbuaqGMJ92VRze]{Effect: Exploit Vulnerability}</p><p><strong>Critical Failure</strong> @UUID[Compendium.pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed}</p>`,\r\n            actor.system.skills[skillKey as SkillAbbreviation]\r\n        ),\r\n        {\r\n            actor,\r\n            title: game.i18n.format('PF2E.SkillCheckWithName', { skillName }),\r\n            type: 'skill-check',\r\n            options,\r\n            dc: { value: DC },\r\n        },\r\n        event\r\n    )\r\n}\r\n","import { IdleuhIdentifyApp } from '~src/apps/identify'\r\n\r\nexport function identify() {\r\n    if (!game.user.isGM) {\r\n        ui.notifications.warn('You not the GM yo!')\r\n        return\r\n    }\r\n\r\n    const actors = game.actors as Actors<ActorPF2e>\r\n    const items = actors.reduce((acc, actor) => {\r\n        if (!actor.hasPlayerOwner) return acc\r\n        const filtered = actor.items.filter(\r\n            item => item.isOfType('physical') && !(item as PhysicalItemPF2e).isIdentified\r\n        ) as PhysicalItemPF2e[]\r\n        acc.push(...filtered)\r\n        return acc\r\n    }, [] as PhysicalItemPF2e[])\r\n\r\n    new IdleuhIdentifyApp(items).render(true)\r\n}\r\n","import { templatePath } from '~src/@utils/foundry/path'\r\nimport { objectHasKey } from '~src/@utils/object'\r\nimport { identifyItem } from '~src/@utils/pf2e'\r\n\r\nexport class IdleuhIdentifyApp extends Application {\r\n    items: PhysicalItemPF2e[]\r\n\r\n    constructor(items: PhysicalItemPF2e[], options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this.items = items\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'idleuh-identify',\r\n            title: 'Identify Items',\r\n            template: templatePath('identify.html'),\r\n            width: 500,\r\n        })\r\n    }\r\n\r\n    getData(options?: Partial<ApplicationOptions> | undefined) {\r\n        return mergeObject(super.getData(options), {\r\n            items: this.items.map(item => {\r\n                const data = item.system.identification.identified\r\n                const identified = item.isIdentified\r\n                const checked = !identified && (item.getFlag('world', 'identify.checked') as boolean)\r\n\r\n                const classes = [] as string[]\r\n                if (identified) classes.push('identified')\r\n                if (checked) classes.push('checked')\r\n\r\n                return {\r\n                    uuid: item.uuid,\r\n                    img: data.img,\r\n                    name: item.isOfType('treasure') ? `($) ${data.name}` : data.name,\r\n                    css: classes.join(' '),\r\n                    identified,\r\n                    checked,\r\n                }\r\n            }),\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>) {\r\n        // super.activateListeners(html)\r\n\r\n        html.find('[data-action=\"chat\"]').on('click', this.#onChat.bind(this))\r\n        html.find('[data-action=\"checks\"]').on('click', this.#onChecks.bind(this))\r\n        html.find('[data-action=\"identify\"]').on('click', this.#onIdentify.bind(this))\r\n        html.find('[data-action=\"remove\"]').on('click', this.#onRemove.bind(this))\r\n        html.find('[data-action=\"reset\"]').on('click', this.#onReset.bind(this))\r\n    }\r\n\r\n    async #onChat(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        item?.toMessage(undefined, { create: true })\r\n    }\r\n\r\n    async #onChecks(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        if (!item) return\r\n\r\n        const itemImg = item.system.identification.unidentified.img\r\n        const itemName = item.system.identification.unidentified.name\r\n        const identifiedName = item.system.identification.identified.name\r\n\r\n        const notMatchingTraditionModifier = game.settings.get('pf2e', 'identifyMagicNotMatchingTraditionModifier') as number\r\n        const proficiencyWithoutLevel = game.settings.get('pf2e', 'proficiencyVariant') === 'ProficiencyWithoutLevel'\r\n        const dcs = identifyItem(item, { proficiencyWithoutLevel, notMatchingTraditionModifier })\r\n\r\n        const skills = Object.entries(dcs)\r\n            .filter(([shortForm, dc]) => Number.isInteger(dc) && objectHasKey(CONFIG.PF2E.skills, shortForm))\r\n            .map(([shortForm, dc]) => ({\r\n                shortForm,\r\n                dc,\r\n                name: game.i18n.localize(CONFIG.PF2E.skills[shortForm as keyof typeof CONFIG.PF2E.skills]),\r\n            }))\r\n\r\n        const content = await renderTemplate('systems/pf2e/templates/actors/identify-item-chat-skill-checks.html', {\r\n            itemImg,\r\n            itemName,\r\n            identifiedName,\r\n            skills,\r\n        })\r\n\r\n        await ChatMessage.create({ user: game.user.id, content })\r\n    }\r\n\r\n    async #onIdentify(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        if (!item) return\r\n\r\n        await item.update({\r\n            'system.identification.status': item.isIdentified ? 'unidentified' : 'identified',\r\n            'system.identification.unidentified': item.getMystifiedData('unidentified'),\r\n            'flags.world.identify.checked': false,\r\n        })\r\n\r\n        this.render()\r\n    }\r\n\r\n    async #onRemove(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const item = await getItemFromEvent(event)\r\n        if (!item) return\r\n\r\n        const checked = item.getFlag('world', 'identify.checked')\r\n        await item.setFlag('world', 'identify.checked', !checked)\r\n\r\n        this.render()\r\n    }\r\n\r\n    async #onReset(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        for (const item of this.items) {\r\n            if (item.isIdentified || !item.getFlag('world', 'identify.checked')) continue\r\n            await item.setFlag('world', 'identify.checked', false)\r\n        }\r\n\r\n        this.render()\r\n    }\r\n}\r\n\r\nasync function getItemFromEvent(event: JQuery.TriggeredEvent<any, any, HTMLElement>) {\r\n    const parent = $(event.currentTarget).closest('[data-item]')\r\n    const uuid = parent.attr('data-item') as string\r\n    const item = await fromUuid(uuid)\r\n    if (!item) parent.remove()\r\n    return item as PhysicalItemPF2e | null\r\n}\r\n","import MODULE_ID from '~./src/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n","/** Check if a key is present in a given object in a type safe way */\r\nexport function objectHasKey<T>(obj: T, key: unknown): key is keyof T {\r\n    return (typeof key === 'string' || typeof key === 'number') && key in obj\r\n}\r\n","import { setHasElement } from './set'\r\n\r\nexport const dcByLevel = new Map([\r\n    [-1, 13],\r\n    [0, 14],\r\n    [1, 15],\r\n    [2, 16],\r\n    [3, 18],\r\n    [4, 19],\r\n    [5, 20],\r\n    [6, 22],\r\n    [7, 23],\r\n    [8, 24],\r\n    [9, 26],\r\n    [10, 27],\r\n    [11, 28],\r\n    [12, 30],\r\n    [13, 31],\r\n    [14, 32],\r\n    [15, 34],\r\n    [16, 35],\r\n    [17, 36],\r\n    [18, 38],\r\n    [19, 39],\r\n    [20, 40],\r\n    [21, 42],\r\n    [22, 44],\r\n    [23, 46],\r\n    [24, 48],\r\n    [25, 50],\r\n])\r\n\r\nexport const dcAdjustments = new Map([\r\n    ['incredibly easy', -10],\r\n    ['very easy', -5],\r\n    ['easy', -2],\r\n    ['normal', 0],\r\n    ['hard', 2],\r\n    ['very hard', 5],\r\n    ['incredibly hard', 10],\r\n])\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal']) as Set<MagicTradition>\r\n\r\nexport function adjustDC(dc: number, adjustment: DCAdjustment = 'normal') {\r\n    return dc + (dcAdjustments.get(adjustment) ?? 0)\r\n}\r\n\r\nexport function rarityToDCAdjustment(rarity: Rarity = 'common'): PositiveDCAdjustment {\r\n    if (rarity === 'uncommon') return 'hard'\r\n    else if (rarity === 'rare') return 'very hard'\r\n    else if (rarity === 'unique') return 'incredibly hard'\r\n    else return 'normal'\r\n}\r\n\r\nexport function adjustDCByRarity(dc: number, rarity: Rarity = 'common') {\r\n    return adjustDC(dc, rarityToDCAdjustment(rarity))\r\n}\r\n\r\nexport function calculateDC(level: number, { proficiencyWithoutLevel = false, rarity = 'common' }: DCOptions = {}) {\r\n    // assume level 0 if garbage comes in. We cast level to number because the backing data may actually have it\r\n    // stored as a string, which we can't catch at compile time\r\n    const dc = dcByLevel.get(level) ?? 14\r\n    if (proficiencyWithoutLevel) {\r\n        // -1 shouldn't be subtracted since it's just\r\n        // a creature level and not related to PC levels\r\n        return adjustDCByRarity(dc - Math.max(level, 0), rarity)\r\n    } else {\r\n        return adjustDCByRarity(dc, rarity)\r\n    }\r\n}\r\n\r\n/** Extract all traits from an item, that match a magic tradition */\r\nfunction getMagicTraditions(item: PhysicalItemPF2e) {\r\n    const traits = item.system.traits.value\r\n    return new Set(traits.filter(t => setHasElement(MAGIC_TRADITIONS, t)))\r\n}\r\n\r\nexport function identifyMagic(item: PhysicalItemPF2e, baseDc: number, notMatchingTraditionModifier: number) {\r\n    const result = {\r\n        occult: baseDc,\r\n        primal: baseDc,\r\n        divine: baseDc,\r\n        arcane: baseDc,\r\n    }\r\n    const traditions = getMagicTraditions(item)\r\n    for (const key of MAGIC_TRADITIONS) {\r\n        // once an item has a magic tradition, all skills\r\n        // that don't match the tradition are hard\r\n        if (traditions.size > 0 && !traditions.has(key)) {\r\n            result[key] = baseDc + notMatchingTraditionModifier\r\n        }\r\n    }\r\n    return { arc: result.arcane, nat: result.primal, rel: result.divine, occ: result.occult }\r\n}\r\n\r\n/** All cursed items are incredibly hard to identify */\r\nexport function getDcRarity(item: PhysicalItemPF2e) {\r\n    return item.traits.has('cursed') ? 'unique' : item.rarity\r\n}\r\n\r\nexport function identifyItem(\r\n    item: PhysicalItemPF2e,\r\n    { proficiencyWithoutLevel = false, notMatchingTraditionModifier }: IdentifyItemOptions,\r\n    noDC = false\r\n) {\r\n    const baseDC = calculateDC(item.level, { proficiencyWithoutLevel })\r\n    const rarity = getDcRarity(item)\r\n    const dc = adjustDCByRarity(baseDC, rarity)\r\n    if (item.isMagical) return identifyMagic(item, dc, notMatchingTraditionModifier)\r\n    if (!noDC) return { cra: dc }\r\n    if (item.isAlchemical) return { cra: dc }\r\n    return { dc: dc }\r\n}\r\n","/** Check if an element is present in the provided set. Especially useful for checking against literal sets */\r\nexport function setHasElement<T extends Set<unknown>>(set: T, value: unknown): value is SetElement<T> {\r\n    return set.has(value)\r\n}\r\n","import { IdleuhManualTokenApp } from '~src/apps/manual-token'\r\n\r\nexport async function manualToken(token: TokenPF2e) {\r\n    if (!token || !token.isOwner) {\r\n        ui.notifications.warn('You need to select an owned token.')\r\n        return\r\n    }\r\n    new IdleuhManualTokenApp(token.document).render(true)\r\n}\r\n","import { templatePath } from '~src/@utils/foundry/path'\r\n\r\nexport class IdleuhManualTokenApp extends FormApplication<TokenDocumentPF2e> {\r\n    static get defaultOptions(): FormApplicationOptions {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'idleuh-manual-token',\r\n            template: templatePath('manual-token.html'),\r\n            title: 'Manual Token Update',\r\n            width: 500,\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find('button[type=button]').on('click', () => this.close())\r\n\r\n        const scale = html.find('input[name=scale]') as JQuery<HTMLInputElement>\r\n        const scaleValue = scale.next('span')\r\n        scale.on('input', () => {\r\n            const val = scale[0].valueAsNumber\r\n            scaleValue.text(val.toFixed(2))\r\n        })\r\n\r\n        const grid = html.find('input[name=grid]') as JQuery<HTMLInputElement>\r\n        const gridValue = grid.next('span')\r\n        grid.on('input', () => {\r\n            const val = grid[0].valueAsNumber\r\n            gridValue.text(val.toFixed(1))\r\n        })\r\n    }\r\n\r\n    protected async _updateObject(event: Event, formData: Record<string, unknown>) {\r\n        const data = this.object\r\n\r\n        const newData = {\r\n            ['displayName']: Number(formData.name),\r\n            ['displayBars']: Number(formData.hp),\r\n            ['texture.src']: formData.img,\r\n            ['flags.pf2e.linkToActorSize']: !!formData.link,\r\n            ['width']: Number(formData.grid),\r\n            ['height']: Number(formData.grid),\r\n            ['texture.scaleX']: Number(formData.scale),\r\n            ['texture.scaleY']: Number(formData.scale),\r\n        }\r\n\r\n        const update = {}\r\n        for (const [k, v] of Object.entries(newData)) {\r\n            if (getProperty(data, k) === v) continue\r\n            setProperty(update, k, v)\r\n        }\r\n\r\n        if (Object.keys(update).length) this.object.update(update)\r\n    }\r\n}\r\n","const proficiency = ['trained', 'expert', 'master', 'legendary', 'untrained']\r\n\r\nexport async function groupPerception() {\r\n    if (!game.user.isGM) {\r\n        ui.notifications.warn('You not the GM yo!')\r\n        return\r\n    }\r\n\r\n    let result = '<hr>'\r\n\r\n    const tokens = canvas.tokens as TokenLayerPF2e\r\n    for (const token of tokens.placeables) {\r\n        const actor = token.actor\r\n        if (!actor || !actor.isOfType('character', 'npc') || !actor.hasPlayerOwner || !actor.attributes.perception) continue\r\n        result += await rollPerception(actor)\r\n    }\r\n\r\n    ChatMessage.create({ content: result, flavor: 'Group Perception Checks', whisper: [game.user.id] })\r\n}\r\n\r\nasync function rollPerception(actor: CharacterPF2e | NPCPF2e) {\r\n    const perception = actor.attributes.perception\r\n    const check = new game.pf2e.CheckModifier('', perception)\r\n    const roll = await game.pf2e.Check.roll(check, { actor: actor, type: 'skill-check', createMessage: false, skipDialog: true })\r\n    if (!roll) return ''\r\n\r\n    const rank = proficiency[(perception.rank ?? 1) - 1]\r\n    const die = roll.dice[0].total\r\n    if (die === undefined) return ''\r\n\r\n    let result = `<div style=\"display:flex;justify-content:space-between;\" title=\"${roll.result}\">`\r\n    result += `<span>${actor.name} (${rank})</span><span`\r\n    if (die == 20) result += ' style=\"color: green;\"'\r\n    else if (die == 1) result += ' style=\"color: red;\"'\r\n\r\n    return `${result}>${roll.total}</span></div>`\r\n}\r\n"],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../"}